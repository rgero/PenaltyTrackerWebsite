// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Header Test 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Header />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <div
        className="header__content"
      >
        <Link
          className="header__title"
          exact="true"
          replace={false}
          to="/"
        >
          <h1>
            The Penalty Tracker
          </h1>
        </Link>
      </div>,
      "className": "header",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <Link
          className="header__title"
          exact="true"
          replace={false}
          to="/"
        >
          <h1>
            The Penalty Tracker
          </h1>
        </Link>,
        "className": "header__content",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <h1>
            The Penalty Tracker
          </h1>,
          "className": "header__title",
          "exact": "true",
          "replace": false,
          "to": "/",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "The Penalty Tracker",
          },
          "ref": null,
          "rendered": "The Penalty Tracker",
          "type": "h1",
        },
        "type": [Function],
      },
      "type": "div",
    },
    "type": "header",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className="header__content"
        >
          <Link
            className="header__title"
            exact="true"
            replace={false}
            to="/"
          >
            <h1>
              The Penalty Tracker
            </h1>
          </Link>
        </div>,
        "className": "header",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <Link
            className="header__title"
            exact="true"
            replace={false}
            to="/"
          >
            <h1>
              The Penalty Tracker
            </h1>
          </Link>,
          "className": "header__content",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <h1>
              The Penalty Tracker
            </h1>,
            "className": "header__title",
            "exact": "true",
            "replace": false,
            "to": "/",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "The Penalty Tracker",
            },
            "ref": null,
            "rendered": "The Penalty Tracker",
            "type": "h1",
          },
          "type": [Function],
        },
        "type": "div",
      },
      "type": "header",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
