// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Search Form Rendering Test 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <SearchForm />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <form
        className="form"
        onSubmit={[Function]}
      >
        <div
          className="form__input"
        >
          <label>
            Season
          </label>
          <select
            className="select"
            onChange={[Function]}
            value="Regular_18_19"
          >
            <option
              value="Regular_16_17"
            >
              2016-17 Regular
            </option>
            <option
              value="Playoffs_16_17"
            >
              2016-17 Playoffs
            </option>
            <option
              value="Regular_17_18"
            >
              2017-18 Regular
            </option>
            <option
              value="Playoffs_17_18"
            >
              2017-18 Playoffs
            </option>
            <option
              value="Regular_18_19"
            >
              2018-19 Regular
            </option>
          </select>
        </div>
        <div
          className="form__input"
        >
          <label>
            Player Name
          </label>
          <input
            autoFocus={true}
            className="text-input"
            onChange={[Function]}
            placeholder="Name"
            type="text"
            value=""
          />
        </div>
        <div
          className="form__input"
        >
          <label>
            Penalty
          </label>
          <input
            autoFocus={true}
            className="text-input"
            onChange={[Function]}
            placeholder="Penalty"
            type="text"
            value=""
          />
        </div>
        <div
          className="form__input"
        >
          <label>
            Player's Team
          </label>
          <select
            className="selectTeams"
            multiple={true}
            onChange={[Function]}
            value={Array []}
          >
            <option
              value="ANA"
            >
              Anaheim Ducks
            </option>
            <option
              value="ARI"
            >
              Arizona Coyotes
            </option>
            <option
              value="BOS"
            >
              Boston Bruins
            </option>
            <option
              value="BUF"
            >
              Buffalo Sabres
            </option>
            <option
              value="CGY"
            >
              Calgary Flames
            </option>
            <option
              value="CAR"
            >
              Carolina Hurricanes
            </option>
            <option
              value="CHI"
            >
              Chicago Blackhawks
            </option>
            <option
              value="COL"
            >
              Colorado Avalanche
            </option>
            <option
              value="CBJ"
            >
              Columbus Blue Jackets
            </option>
            <option
              value="DAL"
            >
              Dallas Stars
            </option>
            <option
              value="DET"
            >
              Detroit Red Wings
            </option>
            <option
              value="EDM"
            >
              Edmonton Oilers
            </option>
            <option
              value="FLA"
            >
              Florida Panthers
            </option>
            <option
              value="LAK"
            >
              Los Angeles Kings
            </option>
            <option
              value="MIN"
            >
              Minnesota Wild
            </option>
            <option
              value="MTL"
            >
              Montreal Canadiens
            </option>
            <option
              value="NSH"
            >
              Nashville Predators
            </option>
            <option
              value="NJD"
            >
              New Jersey Devils
            </option>
            <option
              value="NYI"
            >
              New York Islanders
            </option>
            <option
              value="NYR"
            >
              New York Rangers
            </option>
            <option
              value="OTT"
            >
              Ottawa Senators
            </option>
            <option
              value="PHI"
            >
              Philadelphia Flyers
            </option>
            <option
              value="PIT"
            >
              Pittsburgh Penguins
            </option>
            <option
              value="SJS"
            >
              San Jose Sharks
            </option>
            <option
              value="STL"
            >
              St Louis Blues
            </option>
            <option
              value="TBL"
            >
              Tampa Bay Lightning
            </option>
            <option
              value="TOR"
            >
              Toronto Maple Leafs
            </option>
            <option
              value="VAN"
            >
              Vancouver Canucks
            </option>
            <option
              value="VGK"
            >
              Vegas Golden Knights
            </option>
            <option
              value="WSH"
            >
              Washington Capitals
            </option>
            <option
              value="WPG"
            >
              Winnipeg Jets
            </option>
          </select>
        </div>
        <div
          className="form__input"
        >
          <label>
            Opponent Team
          </label>
          <select
            className="selectTeams"
            multiple={true}
            onChange={[Function]}
            value={Array []}
          >
            <option
              value="ANA"
            >
              Anaheim Ducks
            </option>
            <option
              value="ARI"
            >
              Arizona Coyotes
            </option>
            <option
              value="BOS"
            >
              Boston Bruins
            </option>
            <option
              value="BUF"
            >
              Buffalo Sabres
            </option>
            <option
              value="CGY"
            >
              Calgary Flames
            </option>
            <option
              value="CAR"
            >
              Carolina Hurricanes
            </option>
            <option
              value="CHI"
            >
              Chicago Blackhawks
            </option>
            <option
              value="COL"
            >
              Colorado Avalanche
            </option>
            <option
              value="CBJ"
            >
              Columbus Blue Jackets
            </option>
            <option
              value="DAL"
            >
              Dallas Stars
            </option>
            <option
              value="DET"
            >
              Detroit Red Wings
            </option>
            <option
              value="EDM"
            >
              Edmonton Oilers
            </option>
            <option
              value="FLA"
            >
              Florida Panthers
            </option>
            <option
              value="LAK"
            >
              Los Angeles Kings
            </option>
            <option
              value="MIN"
            >
              Minnesota Wild
            </option>
            <option
              value="MTL"
            >
              Montreal Canadiens
            </option>
            <option
              value="NSH"
            >
              Nashville Predators
            </option>
            <option
              value="NJD"
            >
              New Jersey Devils
            </option>
            <option
              value="NYI"
            >
              New York Islanders
            </option>
            <option
              value="NYR"
            >
              New York Rangers
            </option>
            <option
              value="OTT"
            >
              Ottawa Senators
            </option>
            <option
              value="PHI"
            >
              Philadelphia Flyers
            </option>
            <option
              value="PIT"
            >
              Pittsburgh Penguins
            </option>
            <option
              value="SJS"
            >
              San Jose Sharks
            </option>
            <option
              value="STL"
            >
              St Louis Blues
            </option>
            <option
              value="TBL"
            >
              Tampa Bay Lightning
            </option>
            <option
              value="TOR"
            >
              Toronto Maple Leafs
            </option>
            <option
              value="VAN"
            >
              Vancouver Canucks
            </option>
            <option
              value="VGK"
            >
              Vegas Golden Knights
            </option>
            <option
              value="WSH"
            >
              Washington Capitals
            </option>
            <option
              value="WPG"
            >
              Winnipeg Jets
            </option>
          </select>
        </div>
        <div
          className="form__input"
        >
          <label>
            Location
          </label>
          <select
            className="select"
            onChange={[Function]}
            value="either"
          >
            <option
              value="home"
            >
              Home
            </option>
            <option
              value="away"
            >
              Away
            </option>
            <option
              value="either"
            >
              Either
            </option>
          </select>
        </div>
        <div
          className="form__input"
        >
          <label>
            Start Date
          </label>
          <withStyles(SingleDatePicker)
            anchorDirection="left"
            appendToBody={false}
            block={true}
            calendarInfoPosition="bottom"
            customCloseIcon={null}
            customInputIcon={null}
            date={null}
            daySize={39}
            disableScroll={false}
            disabled={false}
            displayFormat={[Function]}
            enableOutsideDays={false}
            firstDayOfWeek={null}
            focused={false}
            hideKeyboardShortcutsPanel={false}
            horizontalMargin={0}
            horizontalMonthPadding={13}
            id="date"
            initialVisibleMonth={null}
            inputIconPosition="before"
            isDayBlocked={[Function]}
            isDayHighlighted={[Function]}
            isOutsideRange={[Function]}
            isRTL={false}
            keepFocusOnInput={false}
            keepOpenOnDateSelect={false}
            monthFormat="MMMM YYYY"
            navNext={null}
            navPrev={null}
            noBorder={false}
            numberOfMonths={1}
            onClose={[Function]}
            onDateChange={[Function]}
            onFocusChange={[Function]}
            onNextMonthClick={[Function]}
            onPrevMonthClick={[Function]}
            openDirection="down"
            orientation="horizontal"
            phrases={
              Object {
                "calendarLabel": "Calendar",
                "chooseAvailableDate": [Function],
                "clearDate": "Clear Date",
                "closeDatePicker": "Close",
                "dateIsSelected": [Function],
                "dateIsUnavailable": [Function],
                "enterKey": "Enter key",
                "escape": "Escape key",
                "hideKeyboardShortcutsPanel": "Close the shortcuts panel.",
                "homeEnd": "Home and end keys",
                "jumpToNextMonth": "Move forward to switch to the next month.",
                "jumpToPrevMonth": "Move backward to switch to the previous month.",
                "keyboardNavigationInstructions": "Press the down arrow key to interact with the calendar and
  select a date. Press the question mark key to get the keyboard shortcuts for changing dates.",
                "keyboardShortcuts": "Keyboard Shortcuts",
                "leftArrowRightArrow": "Right and left arrow keys",
                "moveFocusByOneDay": "Move backward (left) and forward (right) by one day.",
                "moveFocusByOneMonth": "Switch months.",
                "moveFocusByOneWeek": "Move backward (up) and forward (down) by one week.",
                "moveFocustoStartAndEndOfWeek": "Go to the first or last day of a week.",
                "openThisPanel": "Open this panel.",
                "pageUpPageDown": "page up and page down keys",
                "questionMark": "Question mark",
                "returnFocusToInput": "Return to the date input field.",
                "selectFocusedDate": "Select the date in focus.",
                "showKeyboardShortcutsPanel": "Open the keyboard shortcuts panel.",
                "upArrowDownArrow": "up and down arrow keys",
              }
            }
            placeholder="Date"
            readOnly={false}
            regular={false}
            renderCalendarInfo={null}
            renderDayContents={null}
            renderMonthElement={null}
            renderMonthText={null}
            reopenPickerOnClearDate={false}
            required={false}
            screenReaderInputMessage=""
            showClearDate={false}
            showDefaultInputIcon={false}
            small={false}
            verticalHeight={null}
            verticalSpacing={22}
            weekDayFormat="dd"
            withFullScreenPortal={false}
            withPortal={false}
          />
        </div>
        <div
          className="form__input"
        >
          <label>
            End Date
          </label>
          <withStyles(SingleDatePicker)
            anchorDirection="left"
            appendToBody={false}
            block={true}
            calendarInfoPosition="bottom"
            customCloseIcon={null}
            customInputIcon={null}
            date={null}
            daySize={39}
            disableScroll={false}
            disabled={false}
            displayFormat={[Function]}
            enableOutsideDays={false}
            firstDayOfWeek={null}
            focused={false}
            hideKeyboardShortcutsPanel={false}
            horizontalMargin={0}
            horizontalMonthPadding={13}
            id="date"
            initialVisibleMonth={null}
            inputIconPosition="before"
            isDayBlocked={[Function]}
            isDayHighlighted={[Function]}
            isOutsideRange={[Function]}
            isRTL={false}
            keepFocusOnInput={false}
            keepOpenOnDateSelect={false}
            monthFormat="MMMM YYYY"
            navNext={null}
            navPrev={null}
            noBorder={false}
            numberOfMonths={1}
            onClose={[Function]}
            onDateChange={[Function]}
            onFocusChange={[Function]}
            onNextMonthClick={[Function]}
            onPrevMonthClick={[Function]}
            openDirection="down"
            orientation="horizontal"
            phrases={
              Object {
                "calendarLabel": "Calendar",
                "chooseAvailableDate": [Function],
                "clearDate": "Clear Date",
                "closeDatePicker": "Close",
                "dateIsSelected": [Function],
                "dateIsUnavailable": [Function],
                "enterKey": "Enter key",
                "escape": "Escape key",
                "hideKeyboardShortcutsPanel": "Close the shortcuts panel.",
                "homeEnd": "Home and end keys",
                "jumpToNextMonth": "Move forward to switch to the next month.",
                "jumpToPrevMonth": "Move backward to switch to the previous month.",
                "keyboardNavigationInstructions": "Press the down arrow key to interact with the calendar and
  select a date. Press the question mark key to get the keyboard shortcuts for changing dates.",
                "keyboardShortcuts": "Keyboard Shortcuts",
                "leftArrowRightArrow": "Right and left arrow keys",
                "moveFocusByOneDay": "Move backward (left) and forward (right) by one day.",
                "moveFocusByOneMonth": "Switch months.",
                "moveFocusByOneWeek": "Move backward (up) and forward (down) by one week.",
                "moveFocustoStartAndEndOfWeek": "Go to the first or last day of a week.",
                "openThisPanel": "Open this panel.",
                "pageUpPageDown": "page up and page down keys",
                "questionMark": "Question mark",
                "returnFocusToInput": "Return to the date input field.",
                "selectFocusedDate": "Select the date in focus.",
                "showKeyboardShortcutsPanel": "Open the keyboard shortcuts panel.",
                "upArrowDownArrow": "up and down arrow keys",
              }
            }
            placeholder="Date"
            readOnly={false}
            regular={false}
            renderCalendarInfo={null}
            renderDayContents={null}
            renderMonthElement={null}
            renderMonthText={null}
            reopenPickerOnClearDate={false}
            required={false}
            screenReaderInputMessage=""
            showClearDate={false}
            showDefaultInputIcon={false}
            small={false}
            verticalHeight={null}
            verticalSpacing={22}
            weekDayFormat="dd"
            withFullScreenPortal={false}
            withPortal={false}
          />
        </div>
        <div
          className="buttons"
        >
          <button
            className="button"
            onClick={[Function]}
          >
            Reset
          </button>
          <button
            className="button"
          >
            Submit
          </button>
        </div>
      </form>,
      "className": "content-container",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="form__input"
          >
            <label>
              Season
            </label>
            <select
              className="select"
              onChange={[Function]}
              value="Regular_18_19"
            >
              <option
                value="Regular_16_17"
              >
                2016-17 Regular
              </option>
              <option
                value="Playoffs_16_17"
              >
                2016-17 Playoffs
              </option>
              <option
                value="Regular_17_18"
              >
                2017-18 Regular
              </option>
              <option
                value="Playoffs_17_18"
              >
                2017-18 Playoffs
              </option>
              <option
                value="Regular_18_19"
              >
                2018-19 Regular
              </option>
            </select>
          </div>,
          <div
            className="form__input"
          >
            <label>
              Player Name
            </label>
            <input
              autoFocus={true}
              className="text-input"
              onChange={[Function]}
              placeholder="Name"
              type="text"
              value=""
            />
          </div>,
          <div
            className="form__input"
          >
            <label>
              Penalty
            </label>
            <input
              autoFocus={true}
              className="text-input"
              onChange={[Function]}
              placeholder="Penalty"
              type="text"
              value=""
            />
          </div>,
          <div
            className="form__input"
          >
            <label>
              Player's Team
            </label>
            <select
              className="selectTeams"
              multiple={true}
              onChange={[Function]}
              value={Array []}
            >
              <option
                value="ANA"
              >
                Anaheim Ducks
              </option>
              <option
                value="ARI"
              >
                Arizona Coyotes
              </option>
              <option
                value="BOS"
              >
                Boston Bruins
              </option>
              <option
                value="BUF"
              >
                Buffalo Sabres
              </option>
              <option
                value="CGY"
              >
                Calgary Flames
              </option>
              <option
                value="CAR"
              >
                Carolina Hurricanes
              </option>
              <option
                value="CHI"
              >
                Chicago Blackhawks
              </option>
              <option
                value="COL"
              >
                Colorado Avalanche
              </option>
              <option
                value="CBJ"
              >
                Columbus Blue Jackets
              </option>
              <option
                value="DAL"
              >
                Dallas Stars
              </option>
              <option
                value="DET"
              >
                Detroit Red Wings
              </option>
              <option
                value="EDM"
              >
                Edmonton Oilers
              </option>
              <option
                value="FLA"
              >
                Florida Panthers
              </option>
              <option
                value="LAK"
              >
                Los Angeles Kings
              </option>
              <option
                value="MIN"
              >
                Minnesota Wild
              </option>
              <option
                value="MTL"
              >
                Montreal Canadiens
              </option>
              <option
                value="NSH"
              >
                Nashville Predators
              </option>
              <option
                value="NJD"
              >
                New Jersey Devils
              </option>
              <option
                value="NYI"
              >
                New York Islanders
              </option>
              <option
                value="NYR"
              >
                New York Rangers
              </option>
              <option
                value="OTT"
              >
                Ottawa Senators
              </option>
              <option
                value="PHI"
              >
                Philadelphia Flyers
              </option>
              <option
                value="PIT"
              >
                Pittsburgh Penguins
              </option>
              <option
                value="SJS"
              >
                San Jose Sharks
              </option>
              <option
                value="STL"
              >
                St Louis Blues
              </option>
              <option
                value="TBL"
              >
                Tampa Bay Lightning
              </option>
              <option
                value="TOR"
              >
                Toronto Maple Leafs
              </option>
              <option
                value="VAN"
              >
                Vancouver Canucks
              </option>
              <option
                value="VGK"
              >
                Vegas Golden Knights
              </option>
              <option
                value="WSH"
              >
                Washington Capitals
              </option>
              <option
                value="WPG"
              >
                Winnipeg Jets
              </option>
            </select>
          </div>,
          <div
            className="form__input"
          >
            <label>
              Opponent Team
            </label>
            <select
              className="selectTeams"
              multiple={true}
              onChange={[Function]}
              value={Array []}
            >
              <option
                value="ANA"
              >
                Anaheim Ducks
              </option>
              <option
                value="ARI"
              >
                Arizona Coyotes
              </option>
              <option
                value="BOS"
              >
                Boston Bruins
              </option>
              <option
                value="BUF"
              >
                Buffalo Sabres
              </option>
              <option
                value="CGY"
              >
                Calgary Flames
              </option>
              <option
                value="CAR"
              >
                Carolina Hurricanes
              </option>
              <option
                value="CHI"
              >
                Chicago Blackhawks
              </option>
              <option
                value="COL"
              >
                Colorado Avalanche
              </option>
              <option
                value="CBJ"
              >
                Columbus Blue Jackets
              </option>
              <option
                value="DAL"
              >
                Dallas Stars
              </option>
              <option
                value="DET"
              >
                Detroit Red Wings
              </option>
              <option
                value="EDM"
              >
                Edmonton Oilers
              </option>
              <option
                value="FLA"
              >
                Florida Panthers
              </option>
              <option
                value="LAK"
              >
                Los Angeles Kings
              </option>
              <option
                value="MIN"
              >
                Minnesota Wild
              </option>
              <option
                value="MTL"
              >
                Montreal Canadiens
              </option>
              <option
                value="NSH"
              >
                Nashville Predators
              </option>
              <option
                value="NJD"
              >
                New Jersey Devils
              </option>
              <option
                value="NYI"
              >
                New York Islanders
              </option>
              <option
                value="NYR"
              >
                New York Rangers
              </option>
              <option
                value="OTT"
              >
                Ottawa Senators
              </option>
              <option
                value="PHI"
              >
                Philadelphia Flyers
              </option>
              <option
                value="PIT"
              >
                Pittsburgh Penguins
              </option>
              <option
                value="SJS"
              >
                San Jose Sharks
              </option>
              <option
                value="STL"
              >
                St Louis Blues
              </option>
              <option
                value="TBL"
              >
                Tampa Bay Lightning
              </option>
              <option
                value="TOR"
              >
                Toronto Maple Leafs
              </option>
              <option
                value="VAN"
              >
                Vancouver Canucks
              </option>
              <option
                value="VGK"
              >
                Vegas Golden Knights
              </option>
              <option
                value="WSH"
              >
                Washington Capitals
              </option>
              <option
                value="WPG"
              >
                Winnipeg Jets
              </option>
            </select>
          </div>,
          <div
            className="form__input"
          >
            <label>
              Location
            </label>
            <select
              className="select"
              onChange={[Function]}
              value="either"
            >
              <option
                value="home"
              >
                Home
              </option>
              <option
                value="away"
              >
                Away
              </option>
              <option
                value="either"
              >
                Either
              </option>
            </select>
          </div>,
          <div
            className="form__input"
          >
            <label>
              Start Date
            </label>
            <withStyles(SingleDatePicker)
              anchorDirection="left"
              appendToBody={false}
              block={true}
              calendarInfoPosition="bottom"
              customCloseIcon={null}
              customInputIcon={null}
              date={null}
              daySize={39}
              disableScroll={false}
              disabled={false}
              displayFormat={[Function]}
              enableOutsideDays={false}
              firstDayOfWeek={null}
              focused={false}
              hideKeyboardShortcutsPanel={false}
              horizontalMargin={0}
              horizontalMonthPadding={13}
              id="date"
              initialVisibleMonth={null}
              inputIconPosition="before"
              isDayBlocked={[Function]}
              isDayHighlighted={[Function]}
              isOutsideRange={[Function]}
              isRTL={false}
              keepFocusOnInput={false}
              keepOpenOnDateSelect={false}
              monthFormat="MMMM YYYY"
              navNext={null}
              navPrev={null}
              noBorder={false}
              numberOfMonths={1}
              onClose={[Function]}
              onDateChange={[Function]}
              onFocusChange={[Function]}
              onNextMonthClick={[Function]}
              onPrevMonthClick={[Function]}
              openDirection="down"
              orientation="horizontal"
              phrases={
                Object {
                  "calendarLabel": "Calendar",
                  "chooseAvailableDate": [Function],
                  "clearDate": "Clear Date",
                  "closeDatePicker": "Close",
                  "dateIsSelected": [Function],
                  "dateIsUnavailable": [Function],
                  "enterKey": "Enter key",
                  "escape": "Escape key",
                  "hideKeyboardShortcutsPanel": "Close the shortcuts panel.",
                  "homeEnd": "Home and end keys",
                  "jumpToNextMonth": "Move forward to switch to the next month.",
                  "jumpToPrevMonth": "Move backward to switch to the previous month.",
                  "keyboardNavigationInstructions": "Press the down arrow key to interact with the calendar and
  select a date. Press the question mark key to get the keyboard shortcuts for changing dates.",
                  "keyboardShortcuts": "Keyboard Shortcuts",
                  "leftArrowRightArrow": "Right and left arrow keys",
                  "moveFocusByOneDay": "Move backward (left) and forward (right) by one day.",
                  "moveFocusByOneMonth": "Switch months.",
                  "moveFocusByOneWeek": "Move backward (up) and forward (down) by one week.",
                  "moveFocustoStartAndEndOfWeek": "Go to the first or last day of a week.",
                  "openThisPanel": "Open this panel.",
                  "pageUpPageDown": "page up and page down keys",
                  "questionMark": "Question mark",
                  "returnFocusToInput": "Return to the date input field.",
                  "selectFocusedDate": "Select the date in focus.",
                  "showKeyboardShortcutsPanel": "Open the keyboard shortcuts panel.",
                  "upArrowDownArrow": "up and down arrow keys",
                }
              }
              placeholder="Date"
              readOnly={false}
              regular={false}
              renderCalendarInfo={null}
              renderDayContents={null}
              renderMonthElement={null}
              renderMonthText={null}
              reopenPickerOnClearDate={false}
              required={false}
              screenReaderInputMessage=""
              showClearDate={false}
              showDefaultInputIcon={false}
              small={false}
              verticalHeight={null}
              verticalSpacing={22}
              weekDayFormat="dd"
              withFullScreenPortal={false}
              withPortal={false}
            />
          </div>,
          <div
            className="form__input"
          >
            <label>
              End Date
            </label>
            <withStyles(SingleDatePicker)
              anchorDirection="left"
              appendToBody={false}
              block={true}
              calendarInfoPosition="bottom"
              customCloseIcon={null}
              customInputIcon={null}
              date={null}
              daySize={39}
              disableScroll={false}
              disabled={false}
              displayFormat={[Function]}
              enableOutsideDays={false}
              firstDayOfWeek={null}
              focused={false}
              hideKeyboardShortcutsPanel={false}
              horizontalMargin={0}
              horizontalMonthPadding={13}
              id="date"
              initialVisibleMonth={null}
              inputIconPosition="before"
              isDayBlocked={[Function]}
              isDayHighlighted={[Function]}
              isOutsideRange={[Function]}
              isRTL={false}
              keepFocusOnInput={false}
              keepOpenOnDateSelect={false}
              monthFormat="MMMM YYYY"
              navNext={null}
              navPrev={null}
              noBorder={false}
              numberOfMonths={1}
              onClose={[Function]}
              onDateChange={[Function]}
              onFocusChange={[Function]}
              onNextMonthClick={[Function]}
              onPrevMonthClick={[Function]}
              openDirection="down"
              orientation="horizontal"
              phrases={
                Object {
                  "calendarLabel": "Calendar",
                  "chooseAvailableDate": [Function],
                  "clearDate": "Clear Date",
                  "closeDatePicker": "Close",
                  "dateIsSelected": [Function],
                  "dateIsUnavailable": [Function],
                  "enterKey": "Enter key",
                  "escape": "Escape key",
                  "hideKeyboardShortcutsPanel": "Close the shortcuts panel.",
                  "homeEnd": "Home and end keys",
                  "jumpToNextMonth": "Move forward to switch to the next month.",
                  "jumpToPrevMonth": "Move backward to switch to the previous month.",
                  "keyboardNavigationInstructions": "Press the down arrow key to interact with the calendar and
  select a date. Press the question mark key to get the keyboard shortcuts for changing dates.",
                  "keyboardShortcuts": "Keyboard Shortcuts",
                  "leftArrowRightArrow": "Right and left arrow keys",
                  "moveFocusByOneDay": "Move backward (left) and forward (right) by one day.",
                  "moveFocusByOneMonth": "Switch months.",
                  "moveFocusByOneWeek": "Move backward (up) and forward (down) by one week.",
                  "moveFocustoStartAndEndOfWeek": "Go to the first or last day of a week.",
                  "openThisPanel": "Open this panel.",
                  "pageUpPageDown": "page up and page down keys",
                  "questionMark": "Question mark",
                  "returnFocusToInput": "Return to the date input field.",
                  "selectFocusedDate": "Select the date in focus.",
                  "showKeyboardShortcutsPanel": "Open the keyboard shortcuts panel.",
                  "upArrowDownArrow": "up and down arrow keys",
                }
              }
              placeholder="Date"
              readOnly={false}
              regular={false}
              renderCalendarInfo={null}
              renderDayContents={null}
              renderMonthElement={null}
              renderMonthText={null}
              reopenPickerOnClearDate={false}
              required={false}
              screenReaderInputMessage=""
              showClearDate={false}
              showDefaultInputIcon={false}
              small={false}
              verticalHeight={null}
              verticalSpacing={22}
              weekDayFormat="dd"
              withFullScreenPortal={false}
              withPortal={false}
            />
          </div>,
          <div
            className="buttons"
          >
            <button
              className="button"
              onClick={[Function]}
            >
              Reset
            </button>
            <button
              className="button"
            >
              Submit
            </button>
          </div>,
        ],
        "className": "form",
        "onSubmit": [Function],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <label>
                Season
              </label>,
              <select
                className="select"
                onChange={[Function]}
                value="Regular_18_19"
              >
                <option
                  value="Regular_16_17"
                >
                  2016-17 Regular
                </option>
                <option
                  value="Playoffs_16_17"
                >
                  2016-17 Playoffs
                </option>
                <option
                  value="Regular_17_18"
                >
                  2017-18 Regular
                </option>
                <option
                  value="Playoffs_17_18"
                >
                  2017-18 Playoffs
                </option>
                <option
                  value="Regular_18_19"
                >
                  2018-19 Regular
                </option>
              </select>,
            ],
            "className": "form__input",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Season",
              },
              "ref": null,
              "rendered": "Season",
              "type": "label",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <option
                    value="Regular_16_17"
                  >
                    2016-17 Regular
                  </option>,
                  <option
                    value="Playoffs_16_17"
                  >
                    2016-17 Playoffs
                  </option>,
                  <option
                    value="Regular_17_18"
                  >
                    2017-18 Regular
                  </option>,
                  <option
                    value="Playoffs_17_18"
                  >
                    2017-18 Playoffs
                  </option>,
                  <option
                    value="Regular_18_19"
                  >
                    2018-19 Regular
                  </option>,
                ],
                "className": "select",
                "onChange": [Function],
                "value": "Regular_18_19",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": "Regular_16_17",
                  "nodeType": "host",
                  "props": Object {
                    "children": "2016-17 Regular",
                    "value": "Regular_16_17",
                  },
                  "ref": null,
                  "rendered": "2016-17 Regular",
                  "type": "option",
                },
                Object {
                  "instance": null,
                  "key": "Playoffs_16_17",
                  "nodeType": "host",
                  "props": Object {
                    "children": "2016-17 Playoffs",
                    "value": "Playoffs_16_17",
                  },
                  "ref": null,
                  "rendered": "2016-17 Playoffs",
                  "type": "option",
                },
                Object {
                  "instance": null,
                  "key": "Regular_17_18",
                  "nodeType": "host",
                  "props": Object {
                    "children": "2017-18 Regular",
                    "value": "Regular_17_18",
                  },
                  "ref": null,
                  "rendered": "2017-18 Regular",
                  "type": "option",
                },
                Object {
                  "instance": null,
                  "key": "Playoffs_17_18",
                  "nodeType": "host",
                  "props": Object {
                    "children": "2017-18 Playoffs",
                    "value": "Playoffs_17_18",
                  },
                  "ref": null,
                  "rendered": "2017-18 Playoffs",
                  "type": "option",
                },
                Object {
                  "instance": null,
                  "key": "Regular_18_19",
                  "nodeType": "host",
                  "props": Object {
                    "children": "2018-19 Regular",
                    "value": "Regular_18_19",
                  },
                  "ref": null,
                  "rendered": "2018-19 Regular",
                  "type": "option",
                },
              ],
              "type": "select",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <label>
                Player Name
              </label>,
              <input
                autoFocus={true}
                className="text-input"
                onChange={[Function]}
                placeholder="Name"
                type="text"
                value=""
              />,
            ],
            "className": "form__input",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Player Name",
              },
              "ref": null,
              "rendered": "Player Name",
              "type": "label",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "autoFocus": true,
                "className": "text-input",
                "onChange": [Function],
                "placeholder": "Name",
                "type": "text",
                "value": "",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <label>
                Penalty
              </label>,
              <input
                autoFocus={true}
                className="text-input"
                onChange={[Function]}
                placeholder="Penalty"
                type="text"
                value=""
              />,
            ],
            "className": "form__input",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Penalty",
              },
              "ref": null,
              "rendered": "Penalty",
              "type": "label",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "autoFocus": true,
                "className": "text-input",
                "onChange": [Function],
                "placeholder": "Penalty",
                "type": "text",
                "value": "",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <label>
                Player's Team
              </label>,
              <select
                className="selectTeams"
                multiple={true}
                onChange={[Function]}
                value={Array []}
              >
                <option
                  value="ANA"
                >
                  Anaheim Ducks
                </option>
                <option
                  value="ARI"
                >
                  Arizona Coyotes
                </option>
                <option
                  value="BOS"
                >
                  Boston Bruins
                </option>
                <option
                  value="BUF"
                >
                  Buffalo Sabres
                </option>
                <option
                  value="CGY"
                >
                  Calgary Flames
                </option>
                <option
                  value="CAR"
                >
                  Carolina Hurricanes
                </option>
                <option
                  value="CHI"
                >
                  Chicago Blackhawks
                </option>
                <option
                  value="COL"
                >
                  Colorado Avalanche
                </option>
                <option
                  value="CBJ"
                >
                  Columbus Blue Jackets
                </option>
                <option
                  value="DAL"
                >
                  Dallas Stars
                </option>
                <option
                  value="DET"
                >
                  Detroit Red Wings
                </option>
                <option
                  value="EDM"
                >
                  Edmonton Oilers
                </option>
                <option
                  value="FLA"
                >
                  Florida Panthers
                </option>
                <option
                  value="LAK"
                >
                  Los Angeles Kings
                </option>
                <option
                  value="MIN"
                >
                  Minnesota Wild
                </option>
                <option
                  value="MTL"
                >
                  Montreal Canadiens
                </option>
                <option
                  value="NSH"
                >
                  Nashville Predators
                </option>
                <option
                  value="NJD"
                >
                  New Jersey Devils
                </option>
                <option
                  value="NYI"
                >
                  New York Islanders
                </option>
                <option
                  value="NYR"
                >
                  New York Rangers
                </option>
                <option
                  value="OTT"
                >
                  Ottawa Senators
                </option>
                <option
                  value="PHI"
                >
                  Philadelphia Flyers
                </option>
                <option
                  value="PIT"
                >
                  Pittsburgh Penguins
                </option>
                <option
                  value="SJS"
                >
                  San Jose Sharks
                </option>
                <option
                  value="STL"
                >
                  St Louis Blues
                </option>
                <option
                  value="TBL"
                >
                  Tampa Bay Lightning
                </option>
                <option
                  value="TOR"
                >
                  Toronto Maple Leafs
                </option>
                <option
                  value="VAN"
                >
                  Vancouver Canucks
                </option>
                <option
                  value="VGK"
                >
                  Vegas Golden Knights
                </option>
                <option
                  value="WSH"
                >
                  Washington Capitals
                </option>
                <option
                  value="WPG"
                >
                  Winnipeg Jets
                </option>
              </select>,
            ],
            "className": "form__input",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Player's Team",
              },
              "ref": null,
              "rendered": "Player's Team",
              "type": "label",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <option
                    value="ANA"
                  >
                    Anaheim Ducks
                  </option>,
                  <option
                    value="ARI"
                  >
                    Arizona Coyotes
                  </option>,
                  <option
                    value="BOS"
                  >
                    Boston Bruins
                  </option>,
                  <option
                    value="BUF"
                  >
                    Buffalo Sabres
                  </option>,
                  <option
                    value="CGY"
                  >
                    Calgary Flames
                  </option>,
                  <option
                    value="CAR"
                  >
                    Carolina Hurricanes
                  </option>,
                  <option
                    value="CHI"
                  >
                    Chicago Blackhawks
                  </option>,
                  <option
                    value="COL"
                  >
                    Colorado Avalanche
                  </option>,
                  <option
                    value="CBJ"
                  >
                    Columbus Blue Jackets
                  </option>,
                  <option
                    value="DAL"
                  >
                    Dallas Stars
                  </option>,
                  <option
                    value="DET"
                  >
                    Detroit Red Wings
                  </option>,
                  <option
                    value="EDM"
                  >
                    Edmonton Oilers
                  </option>,
                  <option
                    value="FLA"
                  >
                    Florida Panthers
                  </option>,
                  <option
                    value="LAK"
                  >
                    Los Angeles Kings
                  </option>,
                  <option
                    value="MIN"
                  >
                    Minnesota Wild
                  </option>,
                  <option
                    value="MTL"
                  >
                    Montreal Canadiens
                  </option>,
                  <option
                    value="NSH"
                  >
                    Nashville Predators
                  </option>,
                  <option
                    value="NJD"
                  >
                    New Jersey Devils
                  </option>,
                  <option
                    value="NYI"
                  >
                    New York Islanders
                  </option>,
                  <option
                    value="NYR"
                  >
                    New York Rangers
                  </option>,
                  <option
                    value="OTT"
                  >
                    Ottawa Senators
                  </option>,
                  <option
                    value="PHI"
                  >
                    Philadelphia Flyers
                  </option>,
                  <option
                    value="PIT"
                  >
                    Pittsburgh Penguins
                  </option>,
                  <option
                    value="SJS"
                  >
                    San Jose Sharks
                  </option>,
                  <option
                    value="STL"
                  >
                    St Louis Blues
                  </option>,
                  <option
                    value="TBL"
                  >
                    Tampa Bay Lightning
                  </option>,
                  <option
                    value="TOR"
                  >
                    Toronto Maple Leafs
                  </option>,
                  <option
                    value="VAN"
                  >
                    Vancouver Canucks
                  </option>,
                  <option
                    value="VGK"
                  >
                    Vegas Golden Knights
                  </option>,
                  <option
                    value="WSH"
                  >
                    Washington Capitals
                  </option>,
                  <option
                    value="WPG"
                  >
                    Winnipeg Jets
                  </option>,
                ],
                "className": "selectTeams",
                "multiple": true,
                "onChange": [Function],
                "value": Array [],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": "ANA",
                  "nodeType": "host",
                  "props": Object {
                    "children": "Anaheim Ducks",
                    "value": "ANA",
                  },
                  "ref": null,
                  "rendered": "Anaheim Ducks",
                  "type": "option",
                },
                Object {
                  "instance": null,
                  "key": "ARI",
                  "nodeType": "host",
                  "props": Object {
                    "children": "Arizona Coyotes",
                    "value": "ARI",
                  },
                  "ref": null,
                  "rendered": "Arizona Coyotes",
                  "type": "option",
                },
                Object {
                  "instance": null,
                  "key": "BOS",
                  "nodeType": "host",
                  "props": Object {
                    "children": "Boston Bruins",
                    "value": "BOS",
                  },
                  "ref": null,
                  "rendered": "Boston Bruins",
                  "type": "option",
                },
                Object {
                  "instance": null,
                  "key": "BUF",
                  "nodeType": "host",
                  "props": Object {
                    "children": "Buffalo Sabres",
                    "value": "BUF",
                  },
                  "ref": null,
                  "rendered": "Buffalo Sabres",
                  "type": "option",
                },
                Object {
                  "instance": null,
                  "key": "CGY",
                  "nodeType": "host",
                  "props": Object {
                    "children": "Calgary Flames",
                    "value": "CGY",
                  },
                  "ref": null,
                  "rendered": "Calgary Flames",
                  "type": "option",
                },
                Object {
                  "instance": null,
                  "key": "CAR",
                  "nodeType": "host",
                  "props": Object {
                    "children": "Carolina Hurricanes",
                    "value": "CAR",
                  },
                  "ref": null,
                  "rendered": "Carolina Hurricanes",
                  "type": "option",
                },
                Object {
                  "instance": null,
                  "key": "CHI",
                  "nodeType": "host",
                  "props": Object {
                    "children": "Chicago Blackhawks",
                    "value": "CHI",
                  },
                  "ref": null,
                  "rendered": "Chicago Blackhawks",
                  "type": "option",
                },
                Object {
                  "instance": null,
                  "key": "COL",
                  "nodeType": "host",
                  "props": Object {
                    "children": "Colorado Avalanche",
                    "value": "COL",
                  },
                  "ref": null,
                  "rendered": "Colorado Avalanche",
                  "type": "option",
                },
                Object {
                  "instance": null,
                  "key": "CBJ",
                  "nodeType": "host",
                  "props": Object {
                    "children": "Columbus Blue Jackets",
                    "value": "CBJ",
                  },
                  "ref": null,
                  "rendered": "Columbus Blue Jackets",
                  "type": "option",
                },
                Object {
                  "instance": null,
                  "key": "DAL",
                  "nodeType": "host",
                  "props": Object {
                    "children": "Dallas Stars",
                    "value": "DAL",
                  },
                  "ref": null,
                  "rendered": "Dallas Stars",
                  "type": "option",
                },
                Object {
                  "instance": null,
                  "key": "DET",
                  "nodeType": "host",
                  "props": Object {
                    "children": "Detroit Red Wings",
                    "value": "DET",
                  },
                  "ref": null,
                  "rendered": "Detroit Red Wings",
                  "type": "option",
                },
                Object {
                  "instance": null,
                  "key": "EDM",
                  "nodeType": "host",
                  "props": Object {
                    "children": "Edmonton Oilers",
                    "value": "EDM",
                  },
                  "ref": null,
                  "rendered": "Edmonton Oilers",
                  "type": "option",
                },
                Object {
                  "instance": null,
                  "key": "FLA",
                  "nodeType": "host",
                  "props": Object {
                    "children": "Florida Panthers",
                    "value": "FLA",
                  },
                  "ref": null,
                  "rendered": "Florida Panthers",
                  "type": "option",
                },
                Object {
                  "instance": null,
                  "key": "LAK",
                  "nodeType": "host",
                  "props": Object {
                    "children": "Los Angeles Kings",
                    "value": "LAK",
                  },
                  "ref": null,
                  "rendered": "Los Angeles Kings",
                  "type": "option",
                },
                Object {
                  "instance": null,
                  "key": "MIN",
                  "nodeType": "host",
                  "props": Object {
                    "children": "Minnesota Wild",
                    "value": "MIN",
                  },
                  "ref": null,
                  "rendered": "Minnesota Wild",
                  "type": "option",
                },
                Object {
                  "instance": null,
                  "key": "MTL",
                  "nodeType": "host",
                  "props": Object {
                    "children": "Montreal Canadiens",
                    "value": "MTL",
                  },
                  "ref": null,
                  "rendered": "Montreal Canadiens",
                  "type": "option",
                },
                Object {
                  "instance": null,
                  "key": "NSH",
                  "nodeType": "host",
                  "props": Object {
                    "children": "Nashville Predators",
                    "value": "NSH",
                  },
                  "ref": null,
                  "rendered": "Nashville Predators",
                  "type": "option",
                },
                Object {
                  "instance": null,
                  "key": "NJD",
                  "nodeType": "host",
                  "props": Object {
                    "children": "New Jersey Devils",
                    "value": "NJD",
                  },
                  "ref": null,
                  "rendered": "New Jersey Devils",
                  "type": "option",
                },
                Object {
                  "instance": null,
                  "key": "NYI",
                  "nodeType": "host",
                  "props": Object {
                    "children": "New York Islanders",
                    "value": "NYI",
                  },
                  "ref": null,
                  "rendered": "New York Islanders",
                  "type": "option",
                },
                Object {
                  "instance": null,
                  "key": "NYR",
                  "nodeType": "host",
                  "props": Object {
                    "children": "New York Rangers",
                    "value": "NYR",
                  },
                  "ref": null,
                  "rendered": "New York Rangers",
                  "type": "option",
                },
                Object {
                  "instance": null,
                  "key": "OTT",
                  "nodeType": "host",
                  "props": Object {
                    "children": "Ottawa Senators",
                    "value": "OTT",
                  },
                  "ref": null,
                  "rendered": "Ottawa Senators",
                  "type": "option",
                },
                Object {
                  "instance": null,
                  "key": "PHI",
                  "nodeType": "host",
                  "props": Object {
                    "children": "Philadelphia Flyers",
                    "value": "PHI",
                  },
                  "ref": null,
                  "rendered": "Philadelphia Flyers",
                  "type": "option",
                },
                Object {
                  "instance": null,
                  "key": "PIT",
                  "nodeType": "host",
                  "props": Object {
                    "children": "Pittsburgh Penguins",
                    "value": "PIT",
                  },
                  "ref": null,
                  "rendered": "Pittsburgh Penguins",
                  "type": "option",
                },
                Object {
                  "instance": null,
                  "key": "SJS",
                  "nodeType": "host",
                  "props": Object {
                    "children": "San Jose Sharks",
                    "value": "SJS",
                  },
                  "ref": null,
                  "rendered": "San Jose Sharks",
                  "type": "option",
                },
                Object {
                  "instance": null,
                  "key": "STL",
                  "nodeType": "host",
                  "props": Object {
                    "children": "St Louis Blues",
                    "value": "STL",
                  },
                  "ref": null,
                  "rendered": "St Louis Blues",
                  "type": "option",
                },
                Object {
                  "instance": null,
                  "key": "TBL",
                  "nodeType": "host",
                  "props": Object {
                    "children": "Tampa Bay Lightning",
                    "value": "TBL",
                  },
                  "ref": null,
                  "rendered": "Tampa Bay Lightning",
                  "type": "option",
                },
                Object {
                  "instance": null,
                  "key": "TOR",
                  "nodeType": "host",
                  "props": Object {
                    "children": "Toronto Maple Leafs",
                    "value": "TOR",
                  },
                  "ref": null,
                  "rendered": "Toronto Maple Leafs",
                  "type": "option",
                },
                Object {
                  "instance": null,
                  "key": "VAN",
                  "nodeType": "host",
                  "props": Object {
                    "children": "Vancouver Canucks",
                    "value": "VAN",
                  },
                  "ref": null,
                  "rendered": "Vancouver Canucks",
                  "type": "option",
                },
                Object {
                  "instance": null,
                  "key": "VGK",
                  "nodeType": "host",
                  "props": Object {
                    "children": "Vegas Golden Knights",
                    "value": "VGK",
                  },
                  "ref": null,
                  "rendered": "Vegas Golden Knights",
                  "type": "option",
                },
                Object {
                  "instance": null,
                  "key": "WSH",
                  "nodeType": "host",
                  "props": Object {
                    "children": "Washington Capitals",
                    "value": "WSH",
                  },
                  "ref": null,
                  "rendered": "Washington Capitals",
                  "type": "option",
                },
                Object {
                  "instance": null,
                  "key": "WPG",
                  "nodeType": "host",
                  "props": Object {
                    "children": "Winnipeg Jets",
                    "value": "WPG",
                  },
                  "ref": null,
                  "rendered": "Winnipeg Jets",
                  "type": "option",
                },
              ],
              "type": "select",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <label>
                Opponent Team
              </label>,
              <select
                className="selectTeams"
                multiple={true}
                onChange={[Function]}
                value={Array []}
              >
                <option
                  value="ANA"
                >
                  Anaheim Ducks
                </option>
                <option
                  value="ARI"
                >
                  Arizona Coyotes
                </option>
                <option
                  value="BOS"
                >
                  Boston Bruins
                </option>
                <option
                  value="BUF"
                >
                  Buffalo Sabres
                </option>
                <option
                  value="CGY"
                >
                  Calgary Flames
                </option>
                <option
                  value="CAR"
                >
                  Carolina Hurricanes
                </option>
                <option
                  value="CHI"
                >
                  Chicago Blackhawks
                </option>
                <option
                  value="COL"
                >
                  Colorado Avalanche
                </option>
                <option
                  value="CBJ"
                >
                  Columbus Blue Jackets
                </option>
                <option
                  value="DAL"
                >
                  Dallas Stars
                </option>
                <option
                  value="DET"
                >
                  Detroit Red Wings
                </option>
                <option
                  value="EDM"
                >
                  Edmonton Oilers
                </option>
                <option
                  value="FLA"
                >
                  Florida Panthers
                </option>
                <option
                  value="LAK"
                >
                  Los Angeles Kings
                </option>
                <option
                  value="MIN"
                >
                  Minnesota Wild
                </option>
                <option
                  value="MTL"
                >
                  Montreal Canadiens
                </option>
                <option
                  value="NSH"
                >
                  Nashville Predators
                </option>
                <option
                  value="NJD"
                >
                  New Jersey Devils
                </option>
                <option
                  value="NYI"
                >
                  New York Islanders
                </option>
                <option
                  value="NYR"
                >
                  New York Rangers
                </option>
                <option
                  value="OTT"
                >
                  Ottawa Senators
                </option>
                <option
                  value="PHI"
                >
                  Philadelphia Flyers
                </option>
                <option
                  value="PIT"
                >
                  Pittsburgh Penguins
                </option>
                <option
                  value="SJS"
                >
                  San Jose Sharks
                </option>
                <option
                  value="STL"
                >
                  St Louis Blues
                </option>
                <option
                  value="TBL"
                >
                  Tampa Bay Lightning
                </option>
                <option
                  value="TOR"
                >
                  Toronto Maple Leafs
                </option>
                <option
                  value="VAN"
                >
                  Vancouver Canucks
                </option>
                <option
                  value="VGK"
                >
                  Vegas Golden Knights
                </option>
                <option
                  value="WSH"
                >
                  Washington Capitals
                </option>
                <option
                  value="WPG"
                >
                  Winnipeg Jets
                </option>
              </select>,
            ],
            "className": "form__input",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Opponent Team",
              },
              "ref": null,
              "rendered": "Opponent Team",
              "type": "label",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <option
                    value="ANA"
                  >
                    Anaheim Ducks
                  </option>,
                  <option
                    value="ARI"
                  >
                    Arizona Coyotes
                  </option>,
                  <option
                    value="BOS"
                  >
                    Boston Bruins
                  </option>,
                  <option
                    value="BUF"
                  >
                    Buffalo Sabres
                  </option>,
                  <option
                    value="CGY"
                  >
                    Calgary Flames
                  </option>,
                  <option
                    value="CAR"
                  >
                    Carolina Hurricanes
                  </option>,
                  <option
                    value="CHI"
                  >
                    Chicago Blackhawks
                  </option>,
                  <option
                    value="COL"
                  >
                    Colorado Avalanche
                  </option>,
                  <option
                    value="CBJ"
                  >
                    Columbus Blue Jackets
                  </option>,
                  <option
                    value="DAL"
                  >
                    Dallas Stars
                  </option>,
                  <option
                    value="DET"
                  >
                    Detroit Red Wings
                  </option>,
                  <option
                    value="EDM"
                  >
                    Edmonton Oilers
                  </option>,
                  <option
                    value="FLA"
                  >
                    Florida Panthers
                  </option>,
                  <option
                    value="LAK"
                  >
                    Los Angeles Kings
                  </option>,
                  <option
                    value="MIN"
                  >
                    Minnesota Wild
                  </option>,
                  <option
                    value="MTL"
                  >
                    Montreal Canadiens
                  </option>,
                  <option
                    value="NSH"
                  >
                    Nashville Predators
                  </option>,
                  <option
                    value="NJD"
                  >
                    New Jersey Devils
                  </option>,
                  <option
                    value="NYI"
                  >
                    New York Islanders
                  </option>,
                  <option
                    value="NYR"
                  >
                    New York Rangers
                  </option>,
                  <option
                    value="OTT"
                  >
                    Ottawa Senators
                  </option>,
                  <option
                    value="PHI"
                  >
                    Philadelphia Flyers
                  </option>,
                  <option
                    value="PIT"
                  >
                    Pittsburgh Penguins
                  </option>,
                  <option
                    value="SJS"
                  >
                    San Jose Sharks
                  </option>,
                  <option
                    value="STL"
                  >
                    St Louis Blues
                  </option>,
                  <option
                    value="TBL"
                  >
                    Tampa Bay Lightning
                  </option>,
                  <option
                    value="TOR"
                  >
                    Toronto Maple Leafs
                  </option>,
                  <option
                    value="VAN"
                  >
                    Vancouver Canucks
                  </option>,
                  <option
                    value="VGK"
                  >
                    Vegas Golden Knights
                  </option>,
                  <option
                    value="WSH"
                  >
                    Washington Capitals
                  </option>,
                  <option
                    value="WPG"
                  >
                    Winnipeg Jets
                  </option>,
                ],
                "className": "selectTeams",
                "multiple": true,
                "onChange": [Function],
                "value": Array [],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": "ANA",
                  "nodeType": "host",
                  "props": Object {
                    "children": "Anaheim Ducks",
                    "value": "ANA",
                  },
                  "ref": null,
                  "rendered": "Anaheim Ducks",
                  "type": "option",
                },
                Object {
                  "instance": null,
                  "key": "ARI",
                  "nodeType": "host",
                  "props": Object {
                    "children": "Arizona Coyotes",
                    "value": "ARI",
                  },
                  "ref": null,
                  "rendered": "Arizona Coyotes",
                  "type": "option",
                },
                Object {
                  "instance": null,
                  "key": "BOS",
                  "nodeType": "host",
                  "props": Object {
                    "children": "Boston Bruins",
                    "value": "BOS",
                  },
                  "ref": null,
                  "rendered": "Boston Bruins",
                  "type": "option",
                },
                Object {
                  "instance": null,
                  "key": "BUF",
                  "nodeType": "host",
                  "props": Object {
                    "children": "Buffalo Sabres",
                    "value": "BUF",
                  },
                  "ref": null,
                  "rendered": "Buffalo Sabres",
                  "type": "option",
                },
                Object {
                  "instance": null,
                  "key": "CGY",
                  "nodeType": "host",
                  "props": Object {
                    "children": "Calgary Flames",
                    "value": "CGY",
                  },
                  "ref": null,
                  "rendered": "Calgary Flames",
                  "type": "option",
                },
                Object {
                  "instance": null,
                  "key": "CAR",
                  "nodeType": "host",
                  "props": Object {
                    "children": "Carolina Hurricanes",
                    "value": "CAR",
                  },
                  "ref": null,
                  "rendered": "Carolina Hurricanes",
                  "type": "option",
                },
                Object {
                  "instance": null,
                  "key": "CHI",
                  "nodeType": "host",
                  "props": Object {
                    "children": "Chicago Blackhawks",
                    "value": "CHI",
                  },
                  "ref": null,
                  "rendered": "Chicago Blackhawks",
                  "type": "option",
                },
                Object {
                  "instance": null,
                  "key": "COL",
                  "nodeType": "host",
                  "props": Object {
                    "children": "Colorado Avalanche",
                    "value": "COL",
                  },
                  "ref": null,
                  "rendered": "Colorado Avalanche",
                  "type": "option",
                },
                Object {
                  "instance": null,
                  "key": "CBJ",
                  "nodeType": "host",
                  "props": Object {
                    "children": "Columbus Blue Jackets",
                    "value": "CBJ",
                  },
                  "ref": null,
                  "rendered": "Columbus Blue Jackets",
                  "type": "option",
                },
                Object {
                  "instance": null,
                  "key": "DAL",
                  "nodeType": "host",
                  "props": Object {
                    "children": "Dallas Stars",
                    "value": "DAL",
                  },
                  "ref": null,
                  "rendered": "Dallas Stars",
                  "type": "option",
                },
                Object {
                  "instance": null,
                  "key": "DET",
                  "nodeType": "host",
                  "props": Object {
                    "children": "Detroit Red Wings",
                    "value": "DET",
                  },
                  "ref": null,
                  "rendered": "Detroit Red Wings",
                  "type": "option",
                },
                Object {
                  "instance": null,
                  "key": "EDM",
                  "nodeType": "host",
                  "props": Object {
                    "children": "Edmonton Oilers",
                    "value": "EDM",
                  },
                  "ref": null,
                  "rendered": "Edmonton Oilers",
                  "type": "option",
                },
                Object {
                  "instance": null,
                  "key": "FLA",
                  "nodeType": "host",
                  "props": Object {
                    "children": "Florida Panthers",
                    "value": "FLA",
                  },
                  "ref": null,
                  "rendered": "Florida Panthers",
                  "type": "option",
                },
                Object {
                  "instance": null,
                  "key": "LAK",
                  "nodeType": "host",
                  "props": Object {
                    "children": "Los Angeles Kings",
                    "value": "LAK",
                  },
                  "ref": null,
                  "rendered": "Los Angeles Kings",
                  "type": "option",
                },
                Object {
                  "instance": null,
                  "key": "MIN",
                  "nodeType": "host",
                  "props": Object {
                    "children": "Minnesota Wild",
                    "value": "MIN",
                  },
                  "ref": null,
                  "rendered": "Minnesota Wild",
                  "type": "option",
                },
                Object {
                  "instance": null,
                  "key": "MTL",
                  "nodeType": "host",
                  "props": Object {
                    "children": "Montreal Canadiens",
                    "value": "MTL",
                  },
                  "ref": null,
                  "rendered": "Montreal Canadiens",
                  "type": "option",
                },
                Object {
                  "instance": null,
                  "key": "NSH",
                  "nodeType": "host",
                  "props": Object {
                    "children": "Nashville Predators",
                    "value": "NSH",
                  },
                  "ref": null,
                  "rendered": "Nashville Predators",
                  "type": "option",
                },
                Object {
                  "instance": null,
                  "key": "NJD",
                  "nodeType": "host",
                  "props": Object {
                    "children": "New Jersey Devils",
                    "value": "NJD",
                  },
                  "ref": null,
                  "rendered": "New Jersey Devils",
                  "type": "option",
                },
                Object {
                  "instance": null,
                  "key": "NYI",
                  "nodeType": "host",
                  "props": Object {
                    "children": "New York Islanders",
                    "value": "NYI",
                  },
                  "ref": null,
                  "rendered": "New York Islanders",
                  "type": "option",
                },
                Object {
                  "instance": null,
                  "key": "NYR",
                  "nodeType": "host",
                  "props": Object {
                    "children": "New York Rangers",
                    "value": "NYR",
                  },
                  "ref": null,
                  "rendered": "New York Rangers",
                  "type": "option",
                },
                Object {
                  "instance": null,
                  "key": "OTT",
                  "nodeType": "host",
                  "props": Object {
                    "children": "Ottawa Senators",
                    "value": "OTT",
                  },
                  "ref": null,
                  "rendered": "Ottawa Senators",
                  "type": "option",
                },
                Object {
                  "instance": null,
                  "key": "PHI",
                  "nodeType": "host",
                  "props": Object {
                    "children": "Philadelphia Flyers",
                    "value": "PHI",
                  },
                  "ref": null,
                  "rendered": "Philadelphia Flyers",
                  "type": "option",
                },
                Object {
                  "instance": null,
                  "key": "PIT",
                  "nodeType": "host",
                  "props": Object {
                    "children": "Pittsburgh Penguins",
                    "value": "PIT",
                  },
                  "ref": null,
                  "rendered": "Pittsburgh Penguins",
                  "type": "option",
                },
                Object {
                  "instance": null,
                  "key": "SJS",
                  "nodeType": "host",
                  "props": Object {
                    "children": "San Jose Sharks",
                    "value": "SJS",
                  },
                  "ref": null,
                  "rendered": "San Jose Sharks",
                  "type": "option",
                },
                Object {
                  "instance": null,
                  "key": "STL",
                  "nodeType": "host",
                  "props": Object {
                    "children": "St Louis Blues",
                    "value": "STL",
                  },
                  "ref": null,
                  "rendered": "St Louis Blues",
                  "type": "option",
                },
                Object {
                  "instance": null,
                  "key": "TBL",
                  "nodeType": "host",
                  "props": Object {
                    "children": "Tampa Bay Lightning",
                    "value": "TBL",
                  },
                  "ref": null,
                  "rendered": "Tampa Bay Lightning",
                  "type": "option",
                },
                Object {
                  "instance": null,
                  "key": "TOR",
                  "nodeType": "host",
                  "props": Object {
                    "children": "Toronto Maple Leafs",
                    "value": "TOR",
                  },
                  "ref": null,
                  "rendered": "Toronto Maple Leafs",
                  "type": "option",
                },
                Object {
                  "instance": null,
                  "key": "VAN",
                  "nodeType": "host",
                  "props": Object {
                    "children": "Vancouver Canucks",
                    "value": "VAN",
                  },
                  "ref": null,
                  "rendered": "Vancouver Canucks",
                  "type": "option",
                },
                Object {
                  "instance": null,
                  "key": "VGK",
                  "nodeType": "host",
                  "props": Object {
                    "children": "Vegas Golden Knights",
                    "value": "VGK",
                  },
                  "ref": null,
                  "rendered": "Vegas Golden Knights",
                  "type": "option",
                },
                Object {
                  "instance": null,
                  "key": "WSH",
                  "nodeType": "host",
                  "props": Object {
                    "children": "Washington Capitals",
                    "value": "WSH",
                  },
                  "ref": null,
                  "rendered": "Washington Capitals",
                  "type": "option",
                },
                Object {
                  "instance": null,
                  "key": "WPG",
                  "nodeType": "host",
                  "props": Object {
                    "children": "Winnipeg Jets",
                    "value": "WPG",
                  },
                  "ref": null,
                  "rendered": "Winnipeg Jets",
                  "type": "option",
                },
              ],
              "type": "select",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <label>
                Location
              </label>,
              <select
                className="select"
                onChange={[Function]}
                value="either"
              >
                <option
                  value="home"
                >
                  Home
                </option>
                <option
                  value="away"
                >
                  Away
                </option>
                <option
                  value="either"
                >
                  Either
                </option>
              </select>,
            ],
            "className": "form__input",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Location",
              },
              "ref": null,
              "rendered": "Location",
              "type": "label",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <option
                    value="home"
                  >
                    Home
                  </option>,
                  <option
                    value="away"
                  >
                    Away
                  </option>,
                  <option
                    value="either"
                  >
                    Either
                  </option>,
                ],
                "className": "select",
                "onChange": [Function],
                "value": "either",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": "home",
                  "nodeType": "host",
                  "props": Object {
                    "children": "Home",
                    "value": "home",
                  },
                  "ref": null,
                  "rendered": "Home",
                  "type": "option",
                },
                Object {
                  "instance": null,
                  "key": "away",
                  "nodeType": "host",
                  "props": Object {
                    "children": "Away",
                    "value": "away",
                  },
                  "ref": null,
                  "rendered": "Away",
                  "type": "option",
                },
                Object {
                  "instance": null,
                  "key": "either",
                  "nodeType": "host",
                  "props": Object {
                    "children": "Either",
                    "value": "either",
                  },
                  "ref": null,
                  "rendered": "Either",
                  "type": "option",
                },
              ],
              "type": "select",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <label>
                Start Date
              </label>,
              <withStyles(SingleDatePicker)
                anchorDirection="left"
                appendToBody={false}
                block={true}
                calendarInfoPosition="bottom"
                customCloseIcon={null}
                customInputIcon={null}
                date={null}
                daySize={39}
                disableScroll={false}
                disabled={false}
                displayFormat={[Function]}
                enableOutsideDays={false}
                firstDayOfWeek={null}
                focused={false}
                hideKeyboardShortcutsPanel={false}
                horizontalMargin={0}
                horizontalMonthPadding={13}
                id="date"
                initialVisibleMonth={null}
                inputIconPosition="before"
                isDayBlocked={[Function]}
                isDayHighlighted={[Function]}
                isOutsideRange={[Function]}
                isRTL={false}
                keepFocusOnInput={false}
                keepOpenOnDateSelect={false}
                monthFormat="MMMM YYYY"
                navNext={null}
                navPrev={null}
                noBorder={false}
                numberOfMonths={1}
                onClose={[Function]}
                onDateChange={[Function]}
                onFocusChange={[Function]}
                onNextMonthClick={[Function]}
                onPrevMonthClick={[Function]}
                openDirection="down"
                orientation="horizontal"
                phrases={
                  Object {
                    "calendarLabel": "Calendar",
                    "chooseAvailableDate": [Function],
                    "clearDate": "Clear Date",
                    "closeDatePicker": "Close",
                    "dateIsSelected": [Function],
                    "dateIsUnavailable": [Function],
                    "enterKey": "Enter key",
                    "escape": "Escape key",
                    "hideKeyboardShortcutsPanel": "Close the shortcuts panel.",
                    "homeEnd": "Home and end keys",
                    "jumpToNextMonth": "Move forward to switch to the next month.",
                    "jumpToPrevMonth": "Move backward to switch to the previous month.",
                    "keyboardNavigationInstructions": "Press the down arrow key to interact with the calendar and
  select a date. Press the question mark key to get the keyboard shortcuts for changing dates.",
                    "keyboardShortcuts": "Keyboard Shortcuts",
                    "leftArrowRightArrow": "Right and left arrow keys",
                    "moveFocusByOneDay": "Move backward (left) and forward (right) by one day.",
                    "moveFocusByOneMonth": "Switch months.",
                    "moveFocusByOneWeek": "Move backward (up) and forward (down) by one week.",
                    "moveFocustoStartAndEndOfWeek": "Go to the first or last day of a week.",
                    "openThisPanel": "Open this panel.",
                    "pageUpPageDown": "page up and page down keys",
                    "questionMark": "Question mark",
                    "returnFocusToInput": "Return to the date input field.",
                    "selectFocusedDate": "Select the date in focus.",
                    "showKeyboardShortcutsPanel": "Open the keyboard shortcuts panel.",
                    "upArrowDownArrow": "up and down arrow keys",
                  }
                }
                placeholder="Date"
                readOnly={false}
                regular={false}
                renderCalendarInfo={null}
                renderDayContents={null}
                renderMonthElement={null}
                renderMonthText={null}
                reopenPickerOnClearDate={false}
                required={false}
                screenReaderInputMessage=""
                showClearDate={false}
                showDefaultInputIcon={false}
                small={false}
                verticalHeight={null}
                verticalSpacing={22}
                weekDayFormat="dd"
                withFullScreenPortal={false}
                withPortal={false}
              />,
            ],
            "className": "form__input",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Start Date",
              },
              "ref": null,
              "rendered": "Start Date",
              "type": "label",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "anchorDirection": "left",
                "appendToBody": false,
                "block": true,
                "calendarInfoPosition": "bottom",
                "customCloseIcon": null,
                "customInputIcon": null,
                "date": null,
                "dayAriaLabelFormat": undefined,
                "daySize": 39,
                "disableScroll": false,
                "disabled": false,
                "displayFormat": [Function],
                "enableOutsideDays": false,
                "firstDayOfWeek": null,
                "focused": false,
                "hideKeyboardShortcutsPanel": false,
                "horizontalMargin": 0,
                "horizontalMonthPadding": 13,
                "id": "date",
                "initialVisibleMonth": null,
                "inputIconPosition": "before",
                "isDayBlocked": [Function],
                "isDayHighlighted": [Function],
                "isOutsideRange": [Function],
                "isRTL": false,
                "keepFocusOnInput": false,
                "keepOpenOnDateSelect": false,
                "monthFormat": "MMMM YYYY",
                "navNext": null,
                "navPrev": null,
                "noBorder": false,
                "numberOfMonths": 1,
                "onClose": [Function],
                "onDateChange": [Function],
                "onFocusChange": [Function],
                "onNextMonthClick": [Function],
                "onPrevMonthClick": [Function],
                "openDirection": "down",
                "orientation": "horizontal",
                "phrases": Object {
                  "calendarLabel": "Calendar",
                  "chooseAvailableDate": [Function],
                  "clearDate": "Clear Date",
                  "closeDatePicker": "Close",
                  "dateIsSelected": [Function],
                  "dateIsUnavailable": [Function],
                  "enterKey": "Enter key",
                  "escape": "Escape key",
                  "hideKeyboardShortcutsPanel": "Close the shortcuts panel.",
                  "homeEnd": "Home and end keys",
                  "jumpToNextMonth": "Move forward to switch to the next month.",
                  "jumpToPrevMonth": "Move backward to switch to the previous month.",
                  "keyboardNavigationInstructions": "Press the down arrow key to interact with the calendar and
  select a date. Press the question mark key to get the keyboard shortcuts for changing dates.",
                  "keyboardShortcuts": "Keyboard Shortcuts",
                  "leftArrowRightArrow": "Right and left arrow keys",
                  "moveFocusByOneDay": "Move backward (left) and forward (right) by one day.",
                  "moveFocusByOneMonth": "Switch months.",
                  "moveFocusByOneWeek": "Move backward (up) and forward (down) by one week.",
                  "moveFocustoStartAndEndOfWeek": "Go to the first or last day of a week.",
                  "openThisPanel": "Open this panel.",
                  "pageUpPageDown": "page up and page down keys",
                  "questionMark": "Question mark",
                  "returnFocusToInput": "Return to the date input field.",
                  "selectFocusedDate": "Select the date in focus.",
                  "showKeyboardShortcutsPanel": "Open the keyboard shortcuts panel.",
                  "upArrowDownArrow": "up and down arrow keys",
                },
                "placeholder": "Date",
                "readOnly": false,
                "regular": false,
                "renderCalendarDay": undefined,
                "renderCalendarInfo": null,
                "renderDayContents": null,
                "renderMonthElement": null,
                "renderMonthText": null,
                "reopenPickerOnClearDate": false,
                "required": false,
                "screenReaderInputMessage": "",
                "showClearDate": false,
                "showDefaultInputIcon": false,
                "small": false,
                "transitionDuration": undefined,
                "verticalHeight": null,
                "verticalSpacing": 22,
                "weekDayFormat": "dd",
                "withFullScreenPortal": false,
                "withPortal": false,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <label>
                End Date
              </label>,
              <withStyles(SingleDatePicker)
                anchorDirection="left"
                appendToBody={false}
                block={true}
                calendarInfoPosition="bottom"
                customCloseIcon={null}
                customInputIcon={null}
                date={null}
                daySize={39}
                disableScroll={false}
                disabled={false}
                displayFormat={[Function]}
                enableOutsideDays={false}
                firstDayOfWeek={null}
                focused={false}
                hideKeyboardShortcutsPanel={false}
                horizontalMargin={0}
                horizontalMonthPadding={13}
                id="date"
                initialVisibleMonth={null}
                inputIconPosition="before"
                isDayBlocked={[Function]}
                isDayHighlighted={[Function]}
                isOutsideRange={[Function]}
                isRTL={false}
                keepFocusOnInput={false}
                keepOpenOnDateSelect={false}
                monthFormat="MMMM YYYY"
                navNext={null}
                navPrev={null}
                noBorder={false}
                numberOfMonths={1}
                onClose={[Function]}
                onDateChange={[Function]}
                onFocusChange={[Function]}
                onNextMonthClick={[Function]}
                onPrevMonthClick={[Function]}
                openDirection="down"
                orientation="horizontal"
                phrases={
                  Object {
                    "calendarLabel": "Calendar",
                    "chooseAvailableDate": [Function],
                    "clearDate": "Clear Date",
                    "closeDatePicker": "Close",
                    "dateIsSelected": [Function],
                    "dateIsUnavailable": [Function],
                    "enterKey": "Enter key",
                    "escape": "Escape key",
                    "hideKeyboardShortcutsPanel": "Close the shortcuts panel.",
                    "homeEnd": "Home and end keys",
                    "jumpToNextMonth": "Move forward to switch to the next month.",
                    "jumpToPrevMonth": "Move backward to switch to the previous month.",
                    "keyboardNavigationInstructions": "Press the down arrow key to interact with the calendar and
  select a date. Press the question mark key to get the keyboard shortcuts for changing dates.",
                    "keyboardShortcuts": "Keyboard Shortcuts",
                    "leftArrowRightArrow": "Right and left arrow keys",
                    "moveFocusByOneDay": "Move backward (left) and forward (right) by one day.",
                    "moveFocusByOneMonth": "Switch months.",
                    "moveFocusByOneWeek": "Move backward (up) and forward (down) by one week.",
                    "moveFocustoStartAndEndOfWeek": "Go to the first or last day of a week.",
                    "openThisPanel": "Open this panel.",
                    "pageUpPageDown": "page up and page down keys",
                    "questionMark": "Question mark",
                    "returnFocusToInput": "Return to the date input field.",
                    "selectFocusedDate": "Select the date in focus.",
                    "showKeyboardShortcutsPanel": "Open the keyboard shortcuts panel.",
                    "upArrowDownArrow": "up and down arrow keys",
                  }
                }
                placeholder="Date"
                readOnly={false}
                regular={false}
                renderCalendarInfo={null}
                renderDayContents={null}
                renderMonthElement={null}
                renderMonthText={null}
                reopenPickerOnClearDate={false}
                required={false}
                screenReaderInputMessage=""
                showClearDate={false}
                showDefaultInputIcon={false}
                small={false}
                verticalHeight={null}
                verticalSpacing={22}
                weekDayFormat="dd"
                withFullScreenPortal={false}
                withPortal={false}
              />,
            ],
            "className": "form__input",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "End Date",
              },
              "ref": null,
              "rendered": "End Date",
              "type": "label",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "anchorDirection": "left",
                "appendToBody": false,
                "block": true,
                "calendarInfoPosition": "bottom",
                "customCloseIcon": null,
                "customInputIcon": null,
                "date": null,
                "dayAriaLabelFormat": undefined,
                "daySize": 39,
                "disableScroll": false,
                "disabled": false,
                "displayFormat": [Function],
                "enableOutsideDays": false,
                "firstDayOfWeek": null,
                "focused": false,
                "hideKeyboardShortcutsPanel": false,
                "horizontalMargin": 0,
                "horizontalMonthPadding": 13,
                "id": "date",
                "initialVisibleMonth": null,
                "inputIconPosition": "before",
                "isDayBlocked": [Function],
                "isDayHighlighted": [Function],
                "isOutsideRange": [Function],
                "isRTL": false,
                "keepFocusOnInput": false,
                "keepOpenOnDateSelect": false,
                "monthFormat": "MMMM YYYY",
                "navNext": null,
                "navPrev": null,
                "noBorder": false,
                "numberOfMonths": 1,
                "onClose": [Function],
                "onDateChange": [Function],
                "onFocusChange": [Function],
                "onNextMonthClick": [Function],
                "onPrevMonthClick": [Function],
                "openDirection": "down",
                "orientation": "horizontal",
                "phrases": Object {
                  "calendarLabel": "Calendar",
                  "chooseAvailableDate": [Function],
                  "clearDate": "Clear Date",
                  "closeDatePicker": "Close",
                  "dateIsSelected": [Function],
                  "dateIsUnavailable": [Function],
                  "enterKey": "Enter key",
                  "escape": "Escape key",
                  "hideKeyboardShortcutsPanel": "Close the shortcuts panel.",
                  "homeEnd": "Home and end keys",
                  "jumpToNextMonth": "Move forward to switch to the next month.",
                  "jumpToPrevMonth": "Move backward to switch to the previous month.",
                  "keyboardNavigationInstructions": "Press the down arrow key to interact with the calendar and
  select a date. Press the question mark key to get the keyboard shortcuts for changing dates.",
                  "keyboardShortcuts": "Keyboard Shortcuts",
                  "leftArrowRightArrow": "Right and left arrow keys",
                  "moveFocusByOneDay": "Move backward (left) and forward (right) by one day.",
                  "moveFocusByOneMonth": "Switch months.",
                  "moveFocusByOneWeek": "Move backward (up) and forward (down) by one week.",
                  "moveFocustoStartAndEndOfWeek": "Go to the first or last day of a week.",
                  "openThisPanel": "Open this panel.",
                  "pageUpPageDown": "page up and page down keys",
                  "questionMark": "Question mark",
                  "returnFocusToInput": "Return to the date input field.",
                  "selectFocusedDate": "Select the date in focus.",
                  "showKeyboardShortcutsPanel": "Open the keyboard shortcuts panel.",
                  "upArrowDownArrow": "up and down arrow keys",
                },
                "placeholder": "Date",
                "readOnly": false,
                "regular": false,
                "renderCalendarDay": undefined,
                "renderCalendarInfo": null,
                "renderDayContents": null,
                "renderMonthElement": null,
                "renderMonthText": null,
                "reopenPickerOnClearDate": false,
                "required": false,
                "screenReaderInputMessage": "",
                "showClearDate": false,
                "showDefaultInputIcon": false,
                "small": false,
                "transitionDuration": undefined,
                "verticalHeight": null,
                "verticalSpacing": 22,
                "weekDayFormat": "dd",
                "withFullScreenPortal": false,
                "withPortal": false,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <button
                className="button"
                onClick={[Function]}
              >
                Reset
              </button>,
              <button
                className="button"
              >
                Submit
              </button>,
            ],
            "className": "buttons",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Reset",
                "className": "button",
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "Reset",
              "type": "button",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Submit",
                "className": "button",
              },
              "ref": null,
              "rendered": "Submit",
              "type": "button",
            },
          ],
          "type": "div",
        },
      ],
      "type": "form",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <form
          className="form"
          onSubmit={[Function]}
        >
          <div
            className="form__input"
          >
            <label>
              Season
            </label>
            <select
              className="select"
              onChange={[Function]}
              value="Regular_18_19"
            >
              <option
                value="Regular_16_17"
              >
                2016-17 Regular
              </option>
              <option
                value="Playoffs_16_17"
              >
                2016-17 Playoffs
              </option>
              <option
                value="Regular_17_18"
              >
                2017-18 Regular
              </option>
              <option
                value="Playoffs_17_18"
              >
                2017-18 Playoffs
              </option>
              <option
                value="Regular_18_19"
              >
                2018-19 Regular
              </option>
            </select>
          </div>
          <div
            className="form__input"
          >
            <label>
              Player Name
            </label>
            <input
              autoFocus={true}
              className="text-input"
              onChange={[Function]}
              placeholder="Name"
              type="text"
              value=""
            />
          </div>
          <div
            className="form__input"
          >
            <label>
              Penalty
            </label>
            <input
              autoFocus={true}
              className="text-input"
              onChange={[Function]}
              placeholder="Penalty"
              type="text"
              value=""
            />
          </div>
          <div
            className="form__input"
          >
            <label>
              Player's Team
            </label>
            <select
              className="selectTeams"
              multiple={true}
              onChange={[Function]}
              value={Array []}
            >
              <option
                value="ANA"
              >
                Anaheim Ducks
              </option>
              <option
                value="ARI"
              >
                Arizona Coyotes
              </option>
              <option
                value="BOS"
              >
                Boston Bruins
              </option>
              <option
                value="BUF"
              >
                Buffalo Sabres
              </option>
              <option
                value="CGY"
              >
                Calgary Flames
              </option>
              <option
                value="CAR"
              >
                Carolina Hurricanes
              </option>
              <option
                value="CHI"
              >
                Chicago Blackhawks
              </option>
              <option
                value="COL"
              >
                Colorado Avalanche
              </option>
              <option
                value="CBJ"
              >
                Columbus Blue Jackets
              </option>
              <option
                value="DAL"
              >
                Dallas Stars
              </option>
              <option
                value="DET"
              >
                Detroit Red Wings
              </option>
              <option
                value="EDM"
              >
                Edmonton Oilers
              </option>
              <option
                value="FLA"
              >
                Florida Panthers
              </option>
              <option
                value="LAK"
              >
                Los Angeles Kings
              </option>
              <option
                value="MIN"
              >
                Minnesota Wild
              </option>
              <option
                value="MTL"
              >
                Montreal Canadiens
              </option>
              <option
                value="NSH"
              >
                Nashville Predators
              </option>
              <option
                value="NJD"
              >
                New Jersey Devils
              </option>
              <option
                value="NYI"
              >
                New York Islanders
              </option>
              <option
                value="NYR"
              >
                New York Rangers
              </option>
              <option
                value="OTT"
              >
                Ottawa Senators
              </option>
              <option
                value="PHI"
              >
                Philadelphia Flyers
              </option>
              <option
                value="PIT"
              >
                Pittsburgh Penguins
              </option>
              <option
                value="SJS"
              >
                San Jose Sharks
              </option>
              <option
                value="STL"
              >
                St Louis Blues
              </option>
              <option
                value="TBL"
              >
                Tampa Bay Lightning
              </option>
              <option
                value="TOR"
              >
                Toronto Maple Leafs
              </option>
              <option
                value="VAN"
              >
                Vancouver Canucks
              </option>
              <option
                value="VGK"
              >
                Vegas Golden Knights
              </option>
              <option
                value="WSH"
              >
                Washington Capitals
              </option>
              <option
                value="WPG"
              >
                Winnipeg Jets
              </option>
            </select>
          </div>
          <div
            className="form__input"
          >
            <label>
              Opponent Team
            </label>
            <select
              className="selectTeams"
              multiple={true}
              onChange={[Function]}
              value={Array []}
            >
              <option
                value="ANA"
              >
                Anaheim Ducks
              </option>
              <option
                value="ARI"
              >
                Arizona Coyotes
              </option>
              <option
                value="BOS"
              >
                Boston Bruins
              </option>
              <option
                value="BUF"
              >
                Buffalo Sabres
              </option>
              <option
                value="CGY"
              >
                Calgary Flames
              </option>
              <option
                value="CAR"
              >
                Carolina Hurricanes
              </option>
              <option
                value="CHI"
              >
                Chicago Blackhawks
              </option>
              <option
                value="COL"
              >
                Colorado Avalanche
              </option>
              <option
                value="CBJ"
              >
                Columbus Blue Jackets
              </option>
              <option
                value="DAL"
              >
                Dallas Stars
              </option>
              <option
                value="DET"
              >
                Detroit Red Wings
              </option>
              <option
                value="EDM"
              >
                Edmonton Oilers
              </option>
              <option
                value="FLA"
              >
                Florida Panthers
              </option>
              <option
                value="LAK"
              >
                Los Angeles Kings
              </option>
              <option
                value="MIN"
              >
                Minnesota Wild
              </option>
              <option
                value="MTL"
              >
                Montreal Canadiens
              </option>
              <option
                value="NSH"
              >
                Nashville Predators
              </option>
              <option
                value="NJD"
              >
                New Jersey Devils
              </option>
              <option
                value="NYI"
              >
                New York Islanders
              </option>
              <option
                value="NYR"
              >
                New York Rangers
              </option>
              <option
                value="OTT"
              >
                Ottawa Senators
              </option>
              <option
                value="PHI"
              >
                Philadelphia Flyers
              </option>
              <option
                value="PIT"
              >
                Pittsburgh Penguins
              </option>
              <option
                value="SJS"
              >
                San Jose Sharks
              </option>
              <option
                value="STL"
              >
                St Louis Blues
              </option>
              <option
                value="TBL"
              >
                Tampa Bay Lightning
              </option>
              <option
                value="TOR"
              >
                Toronto Maple Leafs
              </option>
              <option
                value="VAN"
              >
                Vancouver Canucks
              </option>
              <option
                value="VGK"
              >
                Vegas Golden Knights
              </option>
              <option
                value="WSH"
              >
                Washington Capitals
              </option>
              <option
                value="WPG"
              >
                Winnipeg Jets
              </option>
            </select>
          </div>
          <div
            className="form__input"
          >
            <label>
              Location
            </label>
            <select
              className="select"
              onChange={[Function]}
              value="either"
            >
              <option
                value="home"
              >
                Home
              </option>
              <option
                value="away"
              >
                Away
              </option>
              <option
                value="either"
              >
                Either
              </option>
            </select>
          </div>
          <div
            className="form__input"
          >
            <label>
              Start Date
            </label>
            <withStyles(SingleDatePicker)
              anchorDirection="left"
              appendToBody={false}
              block={true}
              calendarInfoPosition="bottom"
              customCloseIcon={null}
              customInputIcon={null}
              date={null}
              daySize={39}
              disableScroll={false}
              disabled={false}
              displayFormat={[Function]}
              enableOutsideDays={false}
              firstDayOfWeek={null}
              focused={false}
              hideKeyboardShortcutsPanel={false}
              horizontalMargin={0}
              horizontalMonthPadding={13}
              id="date"
              initialVisibleMonth={null}
              inputIconPosition="before"
              isDayBlocked={[Function]}
              isDayHighlighted={[Function]}
              isOutsideRange={[Function]}
              isRTL={false}
              keepFocusOnInput={false}
              keepOpenOnDateSelect={false}
              monthFormat="MMMM YYYY"
              navNext={null}
              navPrev={null}
              noBorder={false}
              numberOfMonths={1}
              onClose={[Function]}
              onDateChange={[Function]}
              onFocusChange={[Function]}
              onNextMonthClick={[Function]}
              onPrevMonthClick={[Function]}
              openDirection="down"
              orientation="horizontal"
              phrases={
                Object {
                  "calendarLabel": "Calendar",
                  "chooseAvailableDate": [Function],
                  "clearDate": "Clear Date",
                  "closeDatePicker": "Close",
                  "dateIsSelected": [Function],
                  "dateIsUnavailable": [Function],
                  "enterKey": "Enter key",
                  "escape": "Escape key",
                  "hideKeyboardShortcutsPanel": "Close the shortcuts panel.",
                  "homeEnd": "Home and end keys",
                  "jumpToNextMonth": "Move forward to switch to the next month.",
                  "jumpToPrevMonth": "Move backward to switch to the previous month.",
                  "keyboardNavigationInstructions": "Press the down arrow key to interact with the calendar and
  select a date. Press the question mark key to get the keyboard shortcuts for changing dates.",
                  "keyboardShortcuts": "Keyboard Shortcuts",
                  "leftArrowRightArrow": "Right and left arrow keys",
                  "moveFocusByOneDay": "Move backward (left) and forward (right) by one day.",
                  "moveFocusByOneMonth": "Switch months.",
                  "moveFocusByOneWeek": "Move backward (up) and forward (down) by one week.",
                  "moveFocustoStartAndEndOfWeek": "Go to the first or last day of a week.",
                  "openThisPanel": "Open this panel.",
                  "pageUpPageDown": "page up and page down keys",
                  "questionMark": "Question mark",
                  "returnFocusToInput": "Return to the date input field.",
                  "selectFocusedDate": "Select the date in focus.",
                  "showKeyboardShortcutsPanel": "Open the keyboard shortcuts panel.",
                  "upArrowDownArrow": "up and down arrow keys",
                }
              }
              placeholder="Date"
              readOnly={false}
              regular={false}
              renderCalendarInfo={null}
              renderDayContents={null}
              renderMonthElement={null}
              renderMonthText={null}
              reopenPickerOnClearDate={false}
              required={false}
              screenReaderInputMessage=""
              showClearDate={false}
              showDefaultInputIcon={false}
              small={false}
              verticalHeight={null}
              verticalSpacing={22}
              weekDayFormat="dd"
              withFullScreenPortal={false}
              withPortal={false}
            />
          </div>
          <div
            className="form__input"
          >
            <label>
              End Date
            </label>
            <withStyles(SingleDatePicker)
              anchorDirection="left"
              appendToBody={false}
              block={true}
              calendarInfoPosition="bottom"
              customCloseIcon={null}
              customInputIcon={null}
              date={null}
              daySize={39}
              disableScroll={false}
              disabled={false}
              displayFormat={[Function]}
              enableOutsideDays={false}
              firstDayOfWeek={null}
              focused={false}
              hideKeyboardShortcutsPanel={false}
              horizontalMargin={0}
              horizontalMonthPadding={13}
              id="date"
              initialVisibleMonth={null}
              inputIconPosition="before"
              isDayBlocked={[Function]}
              isDayHighlighted={[Function]}
              isOutsideRange={[Function]}
              isRTL={false}
              keepFocusOnInput={false}
              keepOpenOnDateSelect={false}
              monthFormat="MMMM YYYY"
              navNext={null}
              navPrev={null}
              noBorder={false}
              numberOfMonths={1}
              onClose={[Function]}
              onDateChange={[Function]}
              onFocusChange={[Function]}
              onNextMonthClick={[Function]}
              onPrevMonthClick={[Function]}
              openDirection="down"
              orientation="horizontal"
              phrases={
                Object {
                  "calendarLabel": "Calendar",
                  "chooseAvailableDate": [Function],
                  "clearDate": "Clear Date",
                  "closeDatePicker": "Close",
                  "dateIsSelected": [Function],
                  "dateIsUnavailable": [Function],
                  "enterKey": "Enter key",
                  "escape": "Escape key",
                  "hideKeyboardShortcutsPanel": "Close the shortcuts panel.",
                  "homeEnd": "Home and end keys",
                  "jumpToNextMonth": "Move forward to switch to the next month.",
                  "jumpToPrevMonth": "Move backward to switch to the previous month.",
                  "keyboardNavigationInstructions": "Press the down arrow key to interact with the calendar and
  select a date. Press the question mark key to get the keyboard shortcuts for changing dates.",
                  "keyboardShortcuts": "Keyboard Shortcuts",
                  "leftArrowRightArrow": "Right and left arrow keys",
                  "moveFocusByOneDay": "Move backward (left) and forward (right) by one day.",
                  "moveFocusByOneMonth": "Switch months.",
                  "moveFocusByOneWeek": "Move backward (up) and forward (down) by one week.",
                  "moveFocustoStartAndEndOfWeek": "Go to the first or last day of a week.",
                  "openThisPanel": "Open this panel.",
                  "pageUpPageDown": "page up and page down keys",
                  "questionMark": "Question mark",
                  "returnFocusToInput": "Return to the date input field.",
                  "selectFocusedDate": "Select the date in focus.",
                  "showKeyboardShortcutsPanel": "Open the keyboard shortcuts panel.",
                  "upArrowDownArrow": "up and down arrow keys",
                }
              }
              placeholder="Date"
              readOnly={false}
              regular={false}
              renderCalendarInfo={null}
              renderDayContents={null}
              renderMonthElement={null}
              renderMonthText={null}
              reopenPickerOnClearDate={false}
              required={false}
              screenReaderInputMessage=""
              showClearDate={false}
              showDefaultInputIcon={false}
              small={false}
              verticalHeight={null}
              verticalSpacing={22}
              weekDayFormat="dd"
              withFullScreenPortal={false}
              withPortal={false}
            />
          </div>
          <div
            className="buttons"
          >
            <button
              className="button"
              onClick={[Function]}
            >
              Reset
            </button>
            <button
              className="button"
            >
              Submit
            </button>
          </div>
        </form>,
        "className": "content-container",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="form__input"
            >
              <label>
                Season
              </label>
              <select
                className="select"
                onChange={[Function]}
                value="Regular_18_19"
              >
                <option
                  value="Regular_16_17"
                >
                  2016-17 Regular
                </option>
                <option
                  value="Playoffs_16_17"
                >
                  2016-17 Playoffs
                </option>
                <option
                  value="Regular_17_18"
                >
                  2017-18 Regular
                </option>
                <option
                  value="Playoffs_17_18"
                >
                  2017-18 Playoffs
                </option>
                <option
                  value="Regular_18_19"
                >
                  2018-19 Regular
                </option>
              </select>
            </div>,
            <div
              className="form__input"
            >
              <label>
                Player Name
              </label>
              <input
                autoFocus={true}
                className="text-input"
                onChange={[Function]}
                placeholder="Name"
                type="text"
                value=""
              />
            </div>,
            <div
              className="form__input"
            >
              <label>
                Penalty
              </label>
              <input
                autoFocus={true}
                className="text-input"
                onChange={[Function]}
                placeholder="Penalty"
                type="text"
                value=""
              />
            </div>,
            <div
              className="form__input"
            >
              <label>
                Player's Team
              </label>
              <select
                className="selectTeams"
                multiple={true}
                onChange={[Function]}
                value={Array []}
              >
                <option
                  value="ANA"
                >
                  Anaheim Ducks
                </option>
                <option
                  value="ARI"
                >
                  Arizona Coyotes
                </option>
                <option
                  value="BOS"
                >
                  Boston Bruins
                </option>
                <option
                  value="BUF"
                >
                  Buffalo Sabres
                </option>
                <option
                  value="CGY"
                >
                  Calgary Flames
                </option>
                <option
                  value="CAR"
                >
                  Carolina Hurricanes
                </option>
                <option
                  value="CHI"
                >
                  Chicago Blackhawks
                </option>
                <option
                  value="COL"
                >
                  Colorado Avalanche
                </option>
                <option
                  value="CBJ"
                >
                  Columbus Blue Jackets
                </option>
                <option
                  value="DAL"
                >
                  Dallas Stars
                </option>
                <option
                  value="DET"
                >
                  Detroit Red Wings
                </option>
                <option
                  value="EDM"
                >
                  Edmonton Oilers
                </option>
                <option
                  value="FLA"
                >
                  Florida Panthers
                </option>
                <option
                  value="LAK"
                >
                  Los Angeles Kings
                </option>
                <option
                  value="MIN"
                >
                  Minnesota Wild
                </option>
                <option
                  value="MTL"
                >
                  Montreal Canadiens
                </option>
                <option
                  value="NSH"
                >
                  Nashville Predators
                </option>
                <option
                  value="NJD"
                >
                  New Jersey Devils
                </option>
                <option
                  value="NYI"
                >
                  New York Islanders
                </option>
                <option
                  value="NYR"
                >
                  New York Rangers
                </option>
                <option
                  value="OTT"
                >
                  Ottawa Senators
                </option>
                <option
                  value="PHI"
                >
                  Philadelphia Flyers
                </option>
                <option
                  value="PIT"
                >
                  Pittsburgh Penguins
                </option>
                <option
                  value="SJS"
                >
                  San Jose Sharks
                </option>
                <option
                  value="STL"
                >
                  St Louis Blues
                </option>
                <option
                  value="TBL"
                >
                  Tampa Bay Lightning
                </option>
                <option
                  value="TOR"
                >
                  Toronto Maple Leafs
                </option>
                <option
                  value="VAN"
                >
                  Vancouver Canucks
                </option>
                <option
                  value="VGK"
                >
                  Vegas Golden Knights
                </option>
                <option
                  value="WSH"
                >
                  Washington Capitals
                </option>
                <option
                  value="WPG"
                >
                  Winnipeg Jets
                </option>
              </select>
            </div>,
            <div
              className="form__input"
            >
              <label>
                Opponent Team
              </label>
              <select
                className="selectTeams"
                multiple={true}
                onChange={[Function]}
                value={Array []}
              >
                <option
                  value="ANA"
                >
                  Anaheim Ducks
                </option>
                <option
                  value="ARI"
                >
                  Arizona Coyotes
                </option>
                <option
                  value="BOS"
                >
                  Boston Bruins
                </option>
                <option
                  value="BUF"
                >
                  Buffalo Sabres
                </option>
                <option
                  value="CGY"
                >
                  Calgary Flames
                </option>
                <option
                  value="CAR"
                >
                  Carolina Hurricanes
                </option>
                <option
                  value="CHI"
                >
                  Chicago Blackhawks
                </option>
                <option
                  value="COL"
                >
                  Colorado Avalanche
                </option>
                <option
                  value="CBJ"
                >
                  Columbus Blue Jackets
                </option>
                <option
                  value="DAL"
                >
                  Dallas Stars
                </option>
                <option
                  value="DET"
                >
                  Detroit Red Wings
                </option>
                <option
                  value="EDM"
                >
                  Edmonton Oilers
                </option>
                <option
                  value="FLA"
                >
                  Florida Panthers
                </option>
                <option
                  value="LAK"
                >
                  Los Angeles Kings
                </option>
                <option
                  value="MIN"
                >
                  Minnesota Wild
                </option>
                <option
                  value="MTL"
                >
                  Montreal Canadiens
                </option>
                <option
                  value="NSH"
                >
                  Nashville Predators
                </option>
                <option
                  value="NJD"
                >
                  New Jersey Devils
                </option>
                <option
                  value="NYI"
                >
                  New York Islanders
                </option>
                <option
                  value="NYR"
                >
                  New York Rangers
                </option>
                <option
                  value="OTT"
                >
                  Ottawa Senators
                </option>
                <option
                  value="PHI"
                >
                  Philadelphia Flyers
                </option>
                <option
                  value="PIT"
                >
                  Pittsburgh Penguins
                </option>
                <option
                  value="SJS"
                >
                  San Jose Sharks
                </option>
                <option
                  value="STL"
                >
                  St Louis Blues
                </option>
                <option
                  value="TBL"
                >
                  Tampa Bay Lightning
                </option>
                <option
                  value="TOR"
                >
                  Toronto Maple Leafs
                </option>
                <option
                  value="VAN"
                >
                  Vancouver Canucks
                </option>
                <option
                  value="VGK"
                >
                  Vegas Golden Knights
                </option>
                <option
                  value="WSH"
                >
                  Washington Capitals
                </option>
                <option
                  value="WPG"
                >
                  Winnipeg Jets
                </option>
              </select>
            </div>,
            <div
              className="form__input"
            >
              <label>
                Location
              </label>
              <select
                className="select"
                onChange={[Function]}
                value="either"
              >
                <option
                  value="home"
                >
                  Home
                </option>
                <option
                  value="away"
                >
                  Away
                </option>
                <option
                  value="either"
                >
                  Either
                </option>
              </select>
            </div>,
            <div
              className="form__input"
            >
              <label>
                Start Date
              </label>
              <withStyles(SingleDatePicker)
                anchorDirection="left"
                appendToBody={false}
                block={true}
                calendarInfoPosition="bottom"
                customCloseIcon={null}
                customInputIcon={null}
                date={null}
                daySize={39}
                disableScroll={false}
                disabled={false}
                displayFormat={[Function]}
                enableOutsideDays={false}
                firstDayOfWeek={null}
                focused={false}
                hideKeyboardShortcutsPanel={false}
                horizontalMargin={0}
                horizontalMonthPadding={13}
                id="date"
                initialVisibleMonth={null}
                inputIconPosition="before"
                isDayBlocked={[Function]}
                isDayHighlighted={[Function]}
                isOutsideRange={[Function]}
                isRTL={false}
                keepFocusOnInput={false}
                keepOpenOnDateSelect={false}
                monthFormat="MMMM YYYY"
                navNext={null}
                navPrev={null}
                noBorder={false}
                numberOfMonths={1}
                onClose={[Function]}
                onDateChange={[Function]}
                onFocusChange={[Function]}
                onNextMonthClick={[Function]}
                onPrevMonthClick={[Function]}
                openDirection="down"
                orientation="horizontal"
                phrases={
                  Object {
                    "calendarLabel": "Calendar",
                    "chooseAvailableDate": [Function],
                    "clearDate": "Clear Date",
                    "closeDatePicker": "Close",
                    "dateIsSelected": [Function],
                    "dateIsUnavailable": [Function],
                    "enterKey": "Enter key",
                    "escape": "Escape key",
                    "hideKeyboardShortcutsPanel": "Close the shortcuts panel.",
                    "homeEnd": "Home and end keys",
                    "jumpToNextMonth": "Move forward to switch to the next month.",
                    "jumpToPrevMonth": "Move backward to switch to the previous month.",
                    "keyboardNavigationInstructions": "Press the down arrow key to interact with the calendar and
  select a date. Press the question mark key to get the keyboard shortcuts for changing dates.",
                    "keyboardShortcuts": "Keyboard Shortcuts",
                    "leftArrowRightArrow": "Right and left arrow keys",
                    "moveFocusByOneDay": "Move backward (left) and forward (right) by one day.",
                    "moveFocusByOneMonth": "Switch months.",
                    "moveFocusByOneWeek": "Move backward (up) and forward (down) by one week.",
                    "moveFocustoStartAndEndOfWeek": "Go to the first or last day of a week.",
                    "openThisPanel": "Open this panel.",
                    "pageUpPageDown": "page up and page down keys",
                    "questionMark": "Question mark",
                    "returnFocusToInput": "Return to the date input field.",
                    "selectFocusedDate": "Select the date in focus.",
                    "showKeyboardShortcutsPanel": "Open the keyboard shortcuts panel.",
                    "upArrowDownArrow": "up and down arrow keys",
                  }
                }
                placeholder="Date"
                readOnly={false}
                regular={false}
                renderCalendarInfo={null}
                renderDayContents={null}
                renderMonthElement={null}
                renderMonthText={null}
                reopenPickerOnClearDate={false}
                required={false}
                screenReaderInputMessage=""
                showClearDate={false}
                showDefaultInputIcon={false}
                small={false}
                verticalHeight={null}
                verticalSpacing={22}
                weekDayFormat="dd"
                withFullScreenPortal={false}
                withPortal={false}
              />
            </div>,
            <div
              className="form__input"
            >
              <label>
                End Date
              </label>
              <withStyles(SingleDatePicker)
                anchorDirection="left"
                appendToBody={false}
                block={true}
                calendarInfoPosition="bottom"
                customCloseIcon={null}
                customInputIcon={null}
                date={null}
                daySize={39}
                disableScroll={false}
                disabled={false}
                displayFormat={[Function]}
                enableOutsideDays={false}
                firstDayOfWeek={null}
                focused={false}
                hideKeyboardShortcutsPanel={false}
                horizontalMargin={0}
                horizontalMonthPadding={13}
                id="date"
                initialVisibleMonth={null}
                inputIconPosition="before"
                isDayBlocked={[Function]}
                isDayHighlighted={[Function]}
                isOutsideRange={[Function]}
                isRTL={false}
                keepFocusOnInput={false}
                keepOpenOnDateSelect={false}
                monthFormat="MMMM YYYY"
                navNext={null}
                navPrev={null}
                noBorder={false}
                numberOfMonths={1}
                onClose={[Function]}
                onDateChange={[Function]}
                onFocusChange={[Function]}
                onNextMonthClick={[Function]}
                onPrevMonthClick={[Function]}
                openDirection="down"
                orientation="horizontal"
                phrases={
                  Object {
                    "calendarLabel": "Calendar",
                    "chooseAvailableDate": [Function],
                    "clearDate": "Clear Date",
                    "closeDatePicker": "Close",
                    "dateIsSelected": [Function],
                    "dateIsUnavailable": [Function],
                    "enterKey": "Enter key",
                    "escape": "Escape key",
                    "hideKeyboardShortcutsPanel": "Close the shortcuts panel.",
                    "homeEnd": "Home and end keys",
                    "jumpToNextMonth": "Move forward to switch to the next month.",
                    "jumpToPrevMonth": "Move backward to switch to the previous month.",
                    "keyboardNavigationInstructions": "Press the down arrow key to interact with the calendar and
  select a date. Press the question mark key to get the keyboard shortcuts for changing dates.",
                    "keyboardShortcuts": "Keyboard Shortcuts",
                    "leftArrowRightArrow": "Right and left arrow keys",
                    "moveFocusByOneDay": "Move backward (left) and forward (right) by one day.",
                    "moveFocusByOneMonth": "Switch months.",
                    "moveFocusByOneWeek": "Move backward (up) and forward (down) by one week.",
                    "moveFocustoStartAndEndOfWeek": "Go to the first or last day of a week.",
                    "openThisPanel": "Open this panel.",
                    "pageUpPageDown": "page up and page down keys",
                    "questionMark": "Question mark",
                    "returnFocusToInput": "Return to the date input field.",
                    "selectFocusedDate": "Select the date in focus.",
                    "showKeyboardShortcutsPanel": "Open the keyboard shortcuts panel.",
                    "upArrowDownArrow": "up and down arrow keys",
                  }
                }
                placeholder="Date"
                readOnly={false}
                regular={false}
                renderCalendarInfo={null}
                renderDayContents={null}
                renderMonthElement={null}
                renderMonthText={null}
                reopenPickerOnClearDate={false}
                required={false}
                screenReaderInputMessage=""
                showClearDate={false}
                showDefaultInputIcon={false}
                small={false}
                verticalHeight={null}
                verticalSpacing={22}
                weekDayFormat="dd"
                withFullScreenPortal={false}
                withPortal={false}
              />
            </div>,
            <div
              className="buttons"
            >
              <button
                className="button"
                onClick={[Function]}
              >
                Reset
              </button>
              <button
                className="button"
              >
                Submit
              </button>
            </div>,
          ],
          "className": "form",
          "onSubmit": [Function],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <label>
                  Season
                </label>,
                <select
                  className="select"
                  onChange={[Function]}
                  value="Regular_18_19"
                >
                  <option
                    value="Regular_16_17"
                  >
                    2016-17 Regular
                  </option>
                  <option
                    value="Playoffs_16_17"
                  >
                    2016-17 Playoffs
                  </option>
                  <option
                    value="Regular_17_18"
                  >
                    2017-18 Regular
                  </option>
                  <option
                    value="Playoffs_17_18"
                  >
                    2017-18 Playoffs
                  </option>
                  <option
                    value="Regular_18_19"
                  >
                    2018-19 Regular
                  </option>
                </select>,
              ],
              "className": "form__input",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Season",
                },
                "ref": null,
                "rendered": "Season",
                "type": "label",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <option
                      value="Regular_16_17"
                    >
                      2016-17 Regular
                    </option>,
                    <option
                      value="Playoffs_16_17"
                    >
                      2016-17 Playoffs
                    </option>,
                    <option
                      value="Regular_17_18"
                    >
                      2017-18 Regular
                    </option>,
                    <option
                      value="Playoffs_17_18"
                    >
                      2017-18 Playoffs
                    </option>,
                    <option
                      value="Regular_18_19"
                    >
                      2018-19 Regular
                    </option>,
                  ],
                  "className": "select",
                  "onChange": [Function],
                  "value": "Regular_18_19",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": "Regular_16_17",
                    "nodeType": "host",
                    "props": Object {
                      "children": "2016-17 Regular",
                      "value": "Regular_16_17",
                    },
                    "ref": null,
                    "rendered": "2016-17 Regular",
                    "type": "option",
                  },
                  Object {
                    "instance": null,
                    "key": "Playoffs_16_17",
                    "nodeType": "host",
                    "props": Object {
                      "children": "2016-17 Playoffs",
                      "value": "Playoffs_16_17",
                    },
                    "ref": null,
                    "rendered": "2016-17 Playoffs",
                    "type": "option",
                  },
                  Object {
                    "instance": null,
                    "key": "Regular_17_18",
                    "nodeType": "host",
                    "props": Object {
                      "children": "2017-18 Regular",
                      "value": "Regular_17_18",
                    },
                    "ref": null,
                    "rendered": "2017-18 Regular",
                    "type": "option",
                  },
                  Object {
                    "instance": null,
                    "key": "Playoffs_17_18",
                    "nodeType": "host",
                    "props": Object {
                      "children": "2017-18 Playoffs",
                      "value": "Playoffs_17_18",
                    },
                    "ref": null,
                    "rendered": "2017-18 Playoffs",
                    "type": "option",
                  },
                  Object {
                    "instance": null,
                    "key": "Regular_18_19",
                    "nodeType": "host",
                    "props": Object {
                      "children": "2018-19 Regular",
                      "value": "Regular_18_19",
                    },
                    "ref": null,
                    "rendered": "2018-19 Regular",
                    "type": "option",
                  },
                ],
                "type": "select",
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <label>
                  Player Name
                </label>,
                <input
                  autoFocus={true}
                  className="text-input"
                  onChange={[Function]}
                  placeholder="Name"
                  type="text"
                  value=""
                />,
              ],
              "className": "form__input",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Player Name",
                },
                "ref": null,
                "rendered": "Player Name",
                "type": "label",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "autoFocus": true,
                  "className": "text-input",
                  "onChange": [Function],
                  "placeholder": "Name",
                  "type": "text",
                  "value": "",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <label>
                  Penalty
                </label>,
                <input
                  autoFocus={true}
                  className="text-input"
                  onChange={[Function]}
                  placeholder="Penalty"
                  type="text"
                  value=""
                />,
              ],
              "className": "form__input",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Penalty",
                },
                "ref": null,
                "rendered": "Penalty",
                "type": "label",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "autoFocus": true,
                  "className": "text-input",
                  "onChange": [Function],
                  "placeholder": "Penalty",
                  "type": "text",
                  "value": "",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <label>
                  Player's Team
                </label>,
                <select
                  className="selectTeams"
                  multiple={true}
                  onChange={[Function]}
                  value={Array []}
                >
                  <option
                    value="ANA"
                  >
                    Anaheim Ducks
                  </option>
                  <option
                    value="ARI"
                  >
                    Arizona Coyotes
                  </option>
                  <option
                    value="BOS"
                  >
                    Boston Bruins
                  </option>
                  <option
                    value="BUF"
                  >
                    Buffalo Sabres
                  </option>
                  <option
                    value="CGY"
                  >
                    Calgary Flames
                  </option>
                  <option
                    value="CAR"
                  >
                    Carolina Hurricanes
                  </option>
                  <option
                    value="CHI"
                  >
                    Chicago Blackhawks
                  </option>
                  <option
                    value="COL"
                  >
                    Colorado Avalanche
                  </option>
                  <option
                    value="CBJ"
                  >
                    Columbus Blue Jackets
                  </option>
                  <option
                    value="DAL"
                  >
                    Dallas Stars
                  </option>
                  <option
                    value="DET"
                  >
                    Detroit Red Wings
                  </option>
                  <option
                    value="EDM"
                  >
                    Edmonton Oilers
                  </option>
                  <option
                    value="FLA"
                  >
                    Florida Panthers
                  </option>
                  <option
                    value="LAK"
                  >
                    Los Angeles Kings
                  </option>
                  <option
                    value="MIN"
                  >
                    Minnesota Wild
                  </option>
                  <option
                    value="MTL"
                  >
                    Montreal Canadiens
                  </option>
                  <option
                    value="NSH"
                  >
                    Nashville Predators
                  </option>
                  <option
                    value="NJD"
                  >
                    New Jersey Devils
                  </option>
                  <option
                    value="NYI"
                  >
                    New York Islanders
                  </option>
                  <option
                    value="NYR"
                  >
                    New York Rangers
                  </option>
                  <option
                    value="OTT"
                  >
                    Ottawa Senators
                  </option>
                  <option
                    value="PHI"
                  >
                    Philadelphia Flyers
                  </option>
                  <option
                    value="PIT"
                  >
                    Pittsburgh Penguins
                  </option>
                  <option
                    value="SJS"
                  >
                    San Jose Sharks
                  </option>
                  <option
                    value="STL"
                  >
                    St Louis Blues
                  </option>
                  <option
                    value="TBL"
                  >
                    Tampa Bay Lightning
                  </option>
                  <option
                    value="TOR"
                  >
                    Toronto Maple Leafs
                  </option>
                  <option
                    value="VAN"
                  >
                    Vancouver Canucks
                  </option>
                  <option
                    value="VGK"
                  >
                    Vegas Golden Knights
                  </option>
                  <option
                    value="WSH"
                  >
                    Washington Capitals
                  </option>
                  <option
                    value="WPG"
                  >
                    Winnipeg Jets
                  </option>
                </select>,
              ],
              "className": "form__input",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Player's Team",
                },
                "ref": null,
                "rendered": "Player's Team",
                "type": "label",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <option
                      value="ANA"
                    >
                      Anaheim Ducks
                    </option>,
                    <option
                      value="ARI"
                    >
                      Arizona Coyotes
                    </option>,
                    <option
                      value="BOS"
                    >
                      Boston Bruins
                    </option>,
                    <option
                      value="BUF"
                    >
                      Buffalo Sabres
                    </option>,
                    <option
                      value="CGY"
                    >
                      Calgary Flames
                    </option>,
                    <option
                      value="CAR"
                    >
                      Carolina Hurricanes
                    </option>,
                    <option
                      value="CHI"
                    >
                      Chicago Blackhawks
                    </option>,
                    <option
                      value="COL"
                    >
                      Colorado Avalanche
                    </option>,
                    <option
                      value="CBJ"
                    >
                      Columbus Blue Jackets
                    </option>,
                    <option
                      value="DAL"
                    >
                      Dallas Stars
                    </option>,
                    <option
                      value="DET"
                    >
                      Detroit Red Wings
                    </option>,
                    <option
                      value="EDM"
                    >
                      Edmonton Oilers
                    </option>,
                    <option
                      value="FLA"
                    >
                      Florida Panthers
                    </option>,
                    <option
                      value="LAK"
                    >
                      Los Angeles Kings
                    </option>,
                    <option
                      value="MIN"
                    >
                      Minnesota Wild
                    </option>,
                    <option
                      value="MTL"
                    >
                      Montreal Canadiens
                    </option>,
                    <option
                      value="NSH"
                    >
                      Nashville Predators
                    </option>,
                    <option
                      value="NJD"
                    >
                      New Jersey Devils
                    </option>,
                    <option
                      value="NYI"
                    >
                      New York Islanders
                    </option>,
                    <option
                      value="NYR"
                    >
                      New York Rangers
                    </option>,
                    <option
                      value="OTT"
                    >
                      Ottawa Senators
                    </option>,
                    <option
                      value="PHI"
                    >
                      Philadelphia Flyers
                    </option>,
                    <option
                      value="PIT"
                    >
                      Pittsburgh Penguins
                    </option>,
                    <option
                      value="SJS"
                    >
                      San Jose Sharks
                    </option>,
                    <option
                      value="STL"
                    >
                      St Louis Blues
                    </option>,
                    <option
                      value="TBL"
                    >
                      Tampa Bay Lightning
                    </option>,
                    <option
                      value="TOR"
                    >
                      Toronto Maple Leafs
                    </option>,
                    <option
                      value="VAN"
                    >
                      Vancouver Canucks
                    </option>,
                    <option
                      value="VGK"
                    >
                      Vegas Golden Knights
                    </option>,
                    <option
                      value="WSH"
                    >
                      Washington Capitals
                    </option>,
                    <option
                      value="WPG"
                    >
                      Winnipeg Jets
                    </option>,
                  ],
                  "className": "selectTeams",
                  "multiple": true,
                  "onChange": [Function],
                  "value": Array [],
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": "ANA",
                    "nodeType": "host",
                    "props": Object {
                      "children": "Anaheim Ducks",
                      "value": "ANA",
                    },
                    "ref": null,
                    "rendered": "Anaheim Ducks",
                    "type": "option",
                  },
                  Object {
                    "instance": null,
                    "key": "ARI",
                    "nodeType": "host",
                    "props": Object {
                      "children": "Arizona Coyotes",
                      "value": "ARI",
                    },
                    "ref": null,
                    "rendered": "Arizona Coyotes",
                    "type": "option",
                  },
                  Object {
                    "instance": null,
                    "key": "BOS",
                    "nodeType": "host",
                    "props": Object {
                      "children": "Boston Bruins",
                      "value": "BOS",
                    },
                    "ref": null,
                    "rendered": "Boston Bruins",
                    "type": "option",
                  },
                  Object {
                    "instance": null,
                    "key": "BUF",
                    "nodeType": "host",
                    "props": Object {
                      "children": "Buffalo Sabres",
                      "value": "BUF",
                    },
                    "ref": null,
                    "rendered": "Buffalo Sabres",
                    "type": "option",
                  },
                  Object {
                    "instance": null,
                    "key": "CGY",
                    "nodeType": "host",
                    "props": Object {
                      "children": "Calgary Flames",
                      "value": "CGY",
                    },
                    "ref": null,
                    "rendered": "Calgary Flames",
                    "type": "option",
                  },
                  Object {
                    "instance": null,
                    "key": "CAR",
                    "nodeType": "host",
                    "props": Object {
                      "children": "Carolina Hurricanes",
                      "value": "CAR",
                    },
                    "ref": null,
                    "rendered": "Carolina Hurricanes",
                    "type": "option",
                  },
                  Object {
                    "instance": null,
                    "key": "CHI",
                    "nodeType": "host",
                    "props": Object {
                      "children": "Chicago Blackhawks",
                      "value": "CHI",
                    },
                    "ref": null,
                    "rendered": "Chicago Blackhawks",
                    "type": "option",
                  },
                  Object {
                    "instance": null,
                    "key": "COL",
                    "nodeType": "host",
                    "props": Object {
                      "children": "Colorado Avalanche",
                      "value": "COL",
                    },
                    "ref": null,
                    "rendered": "Colorado Avalanche",
                    "type": "option",
                  },
                  Object {
                    "instance": null,
                    "key": "CBJ",
                    "nodeType": "host",
                    "props": Object {
                      "children": "Columbus Blue Jackets",
                      "value": "CBJ",
                    },
                    "ref": null,
                    "rendered": "Columbus Blue Jackets",
                    "type": "option",
                  },
                  Object {
                    "instance": null,
                    "key": "DAL",
                    "nodeType": "host",
                    "props": Object {
                      "children": "Dallas Stars",
                      "value": "DAL",
                    },
                    "ref": null,
                    "rendered": "Dallas Stars",
                    "type": "option",
                  },
                  Object {
                    "instance": null,
                    "key": "DET",
                    "nodeType": "host",
                    "props": Object {
                      "children": "Detroit Red Wings",
                      "value": "DET",
                    },
                    "ref": null,
                    "rendered": "Detroit Red Wings",
                    "type": "option",
                  },
                  Object {
                    "instance": null,
                    "key": "EDM",
                    "nodeType": "host",
                    "props": Object {
                      "children": "Edmonton Oilers",
                      "value": "EDM",
                    },
                    "ref": null,
                    "rendered": "Edmonton Oilers",
                    "type": "option",
                  },
                  Object {
                    "instance": null,
                    "key": "FLA",
                    "nodeType": "host",
                    "props": Object {
                      "children": "Florida Panthers",
                      "value": "FLA",
                    },
                    "ref": null,
                    "rendered": "Florida Panthers",
                    "type": "option",
                  },
                  Object {
                    "instance": null,
                    "key": "LAK",
                    "nodeType": "host",
                    "props": Object {
                      "children": "Los Angeles Kings",
                      "value": "LAK",
                    },
                    "ref": null,
                    "rendered": "Los Angeles Kings",
                    "type": "option",
                  },
                  Object {
                    "instance": null,
                    "key": "MIN",
                    "nodeType": "host",
                    "props": Object {
                      "children": "Minnesota Wild",
                      "value": "MIN",
                    },
                    "ref": null,
                    "rendered": "Minnesota Wild",
                    "type": "option",
                  },
                  Object {
                    "instance": null,
                    "key": "MTL",
                    "nodeType": "host",
                    "props": Object {
                      "children": "Montreal Canadiens",
                      "value": "MTL",
                    },
                    "ref": null,
                    "rendered": "Montreal Canadiens",
                    "type": "option",
                  },
                  Object {
                    "instance": null,
                    "key": "NSH",
                    "nodeType": "host",
                    "props": Object {
                      "children": "Nashville Predators",
                      "value": "NSH",
                    },
                    "ref": null,
                    "rendered": "Nashville Predators",
                    "type": "option",
                  },
                  Object {
                    "instance": null,
                    "key": "NJD",
                    "nodeType": "host",
                    "props": Object {
                      "children": "New Jersey Devils",
                      "value": "NJD",
                    },
                    "ref": null,
                    "rendered": "New Jersey Devils",
                    "type": "option",
                  },
                  Object {
                    "instance": null,
                    "key": "NYI",
                    "nodeType": "host",
                    "props": Object {
                      "children": "New York Islanders",
                      "value": "NYI",
                    },
                    "ref": null,
                    "rendered": "New York Islanders",
                    "type": "option",
                  },
                  Object {
                    "instance": null,
                    "key": "NYR",
                    "nodeType": "host",
                    "props": Object {
                      "children": "New York Rangers",
                      "value": "NYR",
                    },
                    "ref": null,
                    "rendered": "New York Rangers",
                    "type": "option",
                  },
                  Object {
                    "instance": null,
                    "key": "OTT",
                    "nodeType": "host",
                    "props": Object {
                      "children": "Ottawa Senators",
                      "value": "OTT",
                    },
                    "ref": null,
                    "rendered": "Ottawa Senators",
                    "type": "option",
                  },
                  Object {
                    "instance": null,
                    "key": "PHI",
                    "nodeType": "host",
                    "props": Object {
                      "children": "Philadelphia Flyers",
                      "value": "PHI",
                    },
                    "ref": null,
                    "rendered": "Philadelphia Flyers",
                    "type": "option",
                  },
                  Object {
                    "instance": null,
                    "key": "PIT",
                    "nodeType": "host",
                    "props": Object {
                      "children": "Pittsburgh Penguins",
                      "value": "PIT",
                    },
                    "ref": null,
                    "rendered": "Pittsburgh Penguins",
                    "type": "option",
                  },
                  Object {
                    "instance": null,
                    "key": "SJS",
                    "nodeType": "host",
                    "props": Object {
                      "children": "San Jose Sharks",
                      "value": "SJS",
                    },
                    "ref": null,
                    "rendered": "San Jose Sharks",
                    "type": "option",
                  },
                  Object {
                    "instance": null,
                    "key": "STL",
                    "nodeType": "host",
                    "props": Object {
                      "children": "St Louis Blues",
                      "value": "STL",
                    },
                    "ref": null,
                    "rendered": "St Louis Blues",
                    "type": "option",
                  },
                  Object {
                    "instance": null,
                    "key": "TBL",
                    "nodeType": "host",
                    "props": Object {
                      "children": "Tampa Bay Lightning",
                      "value": "TBL",
                    },
                    "ref": null,
                    "rendered": "Tampa Bay Lightning",
                    "type": "option",
                  },
                  Object {
                    "instance": null,
                    "key": "TOR",
                    "nodeType": "host",
                    "props": Object {
                      "children": "Toronto Maple Leafs",
                      "value": "TOR",
                    },
                    "ref": null,
                    "rendered": "Toronto Maple Leafs",
                    "type": "option",
                  },
                  Object {
                    "instance": null,
                    "key": "VAN",
                    "nodeType": "host",
                    "props": Object {
                      "children": "Vancouver Canucks",
                      "value": "VAN",
                    },
                    "ref": null,
                    "rendered": "Vancouver Canucks",
                    "type": "option",
                  },
                  Object {
                    "instance": null,
                    "key": "VGK",
                    "nodeType": "host",
                    "props": Object {
                      "children": "Vegas Golden Knights",
                      "value": "VGK",
                    },
                    "ref": null,
                    "rendered": "Vegas Golden Knights",
                    "type": "option",
                  },
                  Object {
                    "instance": null,
                    "key": "WSH",
                    "nodeType": "host",
                    "props": Object {
                      "children": "Washington Capitals",
                      "value": "WSH",
                    },
                    "ref": null,
                    "rendered": "Washington Capitals",
                    "type": "option",
                  },
                  Object {
                    "instance": null,
                    "key": "WPG",
                    "nodeType": "host",
                    "props": Object {
                      "children": "Winnipeg Jets",
                      "value": "WPG",
                    },
                    "ref": null,
                    "rendered": "Winnipeg Jets",
                    "type": "option",
                  },
                ],
                "type": "select",
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <label>
                  Opponent Team
                </label>,
                <select
                  className="selectTeams"
                  multiple={true}
                  onChange={[Function]}
                  value={Array []}
                >
                  <option
                    value="ANA"
                  >
                    Anaheim Ducks
                  </option>
                  <option
                    value="ARI"
                  >
                    Arizona Coyotes
                  </option>
                  <option
                    value="BOS"
                  >
                    Boston Bruins
                  </option>
                  <option
                    value="BUF"
                  >
                    Buffalo Sabres
                  </option>
                  <option
                    value="CGY"
                  >
                    Calgary Flames
                  </option>
                  <option
                    value="CAR"
                  >
                    Carolina Hurricanes
                  </option>
                  <option
                    value="CHI"
                  >
                    Chicago Blackhawks
                  </option>
                  <option
                    value="COL"
                  >
                    Colorado Avalanche
                  </option>
                  <option
                    value="CBJ"
                  >
                    Columbus Blue Jackets
                  </option>
                  <option
                    value="DAL"
                  >
                    Dallas Stars
                  </option>
                  <option
                    value="DET"
                  >
                    Detroit Red Wings
                  </option>
                  <option
                    value="EDM"
                  >
                    Edmonton Oilers
                  </option>
                  <option
                    value="FLA"
                  >
                    Florida Panthers
                  </option>
                  <option
                    value="LAK"
                  >
                    Los Angeles Kings
                  </option>
                  <option
                    value="MIN"
                  >
                    Minnesota Wild
                  </option>
                  <option
                    value="MTL"
                  >
                    Montreal Canadiens
                  </option>
                  <option
                    value="NSH"
                  >
                    Nashville Predators
                  </option>
                  <option
                    value="NJD"
                  >
                    New Jersey Devils
                  </option>
                  <option
                    value="NYI"
                  >
                    New York Islanders
                  </option>
                  <option
                    value="NYR"
                  >
                    New York Rangers
                  </option>
                  <option
                    value="OTT"
                  >
                    Ottawa Senators
                  </option>
                  <option
                    value="PHI"
                  >
                    Philadelphia Flyers
                  </option>
                  <option
                    value="PIT"
                  >
                    Pittsburgh Penguins
                  </option>
                  <option
                    value="SJS"
                  >
                    San Jose Sharks
                  </option>
                  <option
                    value="STL"
                  >
                    St Louis Blues
                  </option>
                  <option
                    value="TBL"
                  >
                    Tampa Bay Lightning
                  </option>
                  <option
                    value="TOR"
                  >
                    Toronto Maple Leafs
                  </option>
                  <option
                    value="VAN"
                  >
                    Vancouver Canucks
                  </option>
                  <option
                    value="VGK"
                  >
                    Vegas Golden Knights
                  </option>
                  <option
                    value="WSH"
                  >
                    Washington Capitals
                  </option>
                  <option
                    value="WPG"
                  >
                    Winnipeg Jets
                  </option>
                </select>,
              ],
              "className": "form__input",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Opponent Team",
                },
                "ref": null,
                "rendered": "Opponent Team",
                "type": "label",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <option
                      value="ANA"
                    >
                      Anaheim Ducks
                    </option>,
                    <option
                      value="ARI"
                    >
                      Arizona Coyotes
                    </option>,
                    <option
                      value="BOS"
                    >
                      Boston Bruins
                    </option>,
                    <option
                      value="BUF"
                    >
                      Buffalo Sabres
                    </option>,
                    <option
                      value="CGY"
                    >
                      Calgary Flames
                    </option>,
                    <option
                      value="CAR"
                    >
                      Carolina Hurricanes
                    </option>,
                    <option
                      value="CHI"
                    >
                      Chicago Blackhawks
                    </option>,
                    <option
                      value="COL"
                    >
                      Colorado Avalanche
                    </option>,
                    <option
                      value="CBJ"
                    >
                      Columbus Blue Jackets
                    </option>,
                    <option
                      value="DAL"
                    >
                      Dallas Stars
                    </option>,
                    <option
                      value="DET"
                    >
                      Detroit Red Wings
                    </option>,
                    <option
                      value="EDM"
                    >
                      Edmonton Oilers
                    </option>,
                    <option
                      value="FLA"
                    >
                      Florida Panthers
                    </option>,
                    <option
                      value="LAK"
                    >
                      Los Angeles Kings
                    </option>,
                    <option
                      value="MIN"
                    >
                      Minnesota Wild
                    </option>,
                    <option
                      value="MTL"
                    >
                      Montreal Canadiens
                    </option>,
                    <option
                      value="NSH"
                    >
                      Nashville Predators
                    </option>,
                    <option
                      value="NJD"
                    >
                      New Jersey Devils
                    </option>,
                    <option
                      value="NYI"
                    >
                      New York Islanders
                    </option>,
                    <option
                      value="NYR"
                    >
                      New York Rangers
                    </option>,
                    <option
                      value="OTT"
                    >
                      Ottawa Senators
                    </option>,
                    <option
                      value="PHI"
                    >
                      Philadelphia Flyers
                    </option>,
                    <option
                      value="PIT"
                    >
                      Pittsburgh Penguins
                    </option>,
                    <option
                      value="SJS"
                    >
                      San Jose Sharks
                    </option>,
                    <option
                      value="STL"
                    >
                      St Louis Blues
                    </option>,
                    <option
                      value="TBL"
                    >
                      Tampa Bay Lightning
                    </option>,
                    <option
                      value="TOR"
                    >
                      Toronto Maple Leafs
                    </option>,
                    <option
                      value="VAN"
                    >
                      Vancouver Canucks
                    </option>,
                    <option
                      value="VGK"
                    >
                      Vegas Golden Knights
                    </option>,
                    <option
                      value="WSH"
                    >
                      Washington Capitals
                    </option>,
                    <option
                      value="WPG"
                    >
                      Winnipeg Jets
                    </option>,
                  ],
                  "className": "selectTeams",
                  "multiple": true,
                  "onChange": [Function],
                  "value": Array [],
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": "ANA",
                    "nodeType": "host",
                    "props": Object {
                      "children": "Anaheim Ducks",
                      "value": "ANA",
                    },
                    "ref": null,
                    "rendered": "Anaheim Ducks",
                    "type": "option",
                  },
                  Object {
                    "instance": null,
                    "key": "ARI",
                    "nodeType": "host",
                    "props": Object {
                      "children": "Arizona Coyotes",
                      "value": "ARI",
                    },
                    "ref": null,
                    "rendered": "Arizona Coyotes",
                    "type": "option",
                  },
                  Object {
                    "instance": null,
                    "key": "BOS",
                    "nodeType": "host",
                    "props": Object {
                      "children": "Boston Bruins",
                      "value": "BOS",
                    },
                    "ref": null,
                    "rendered": "Boston Bruins",
                    "type": "option",
                  },
                  Object {
                    "instance": null,
                    "key": "BUF",
                    "nodeType": "host",
                    "props": Object {
                      "children": "Buffalo Sabres",
                      "value": "BUF",
                    },
                    "ref": null,
                    "rendered": "Buffalo Sabres",
                    "type": "option",
                  },
                  Object {
                    "instance": null,
                    "key": "CGY",
                    "nodeType": "host",
                    "props": Object {
                      "children": "Calgary Flames",
                      "value": "CGY",
                    },
                    "ref": null,
                    "rendered": "Calgary Flames",
                    "type": "option",
                  },
                  Object {
                    "instance": null,
                    "key": "CAR",
                    "nodeType": "host",
                    "props": Object {
                      "children": "Carolina Hurricanes",
                      "value": "CAR",
                    },
                    "ref": null,
                    "rendered": "Carolina Hurricanes",
                    "type": "option",
                  },
                  Object {
                    "instance": null,
                    "key": "CHI",
                    "nodeType": "host",
                    "props": Object {
                      "children": "Chicago Blackhawks",
                      "value": "CHI",
                    },
                    "ref": null,
                    "rendered": "Chicago Blackhawks",
                    "type": "option",
                  },
                  Object {
                    "instance": null,
                    "key": "COL",
                    "nodeType": "host",
                    "props": Object {
                      "children": "Colorado Avalanche",
                      "value": "COL",
                    },
                    "ref": null,
                    "rendered": "Colorado Avalanche",
                    "type": "option",
                  },
                  Object {
                    "instance": null,
                    "key": "CBJ",
                    "nodeType": "host",
                    "props": Object {
                      "children": "Columbus Blue Jackets",
                      "value": "CBJ",
                    },
                    "ref": null,
                    "rendered": "Columbus Blue Jackets",
                    "type": "option",
                  },
                  Object {
                    "instance": null,
                    "key": "DAL",
                    "nodeType": "host",
                    "props": Object {
                      "children": "Dallas Stars",
                      "value": "DAL",
                    },
                    "ref": null,
                    "rendered": "Dallas Stars",
                    "type": "option",
                  },
                  Object {
                    "instance": null,
                    "key": "DET",
                    "nodeType": "host",
                    "props": Object {
                      "children": "Detroit Red Wings",
                      "value": "DET",
                    },
                    "ref": null,
                    "rendered": "Detroit Red Wings",
                    "type": "option",
                  },
                  Object {
                    "instance": null,
                    "key": "EDM",
                    "nodeType": "host",
                    "props": Object {
                      "children": "Edmonton Oilers",
                      "value": "EDM",
                    },
                    "ref": null,
                    "rendered": "Edmonton Oilers",
                    "type": "option",
                  },
                  Object {
                    "instance": null,
                    "key": "FLA",
                    "nodeType": "host",
                    "props": Object {
                      "children": "Florida Panthers",
                      "value": "FLA",
                    },
                    "ref": null,
                    "rendered": "Florida Panthers",
                    "type": "option",
                  },
                  Object {
                    "instance": null,
                    "key": "LAK",
                    "nodeType": "host",
                    "props": Object {
                      "children": "Los Angeles Kings",
                      "value": "LAK",
                    },
                    "ref": null,
                    "rendered": "Los Angeles Kings",
                    "type": "option",
                  },
                  Object {
                    "instance": null,
                    "key": "MIN",
                    "nodeType": "host",
                    "props": Object {
                      "children": "Minnesota Wild",
                      "value": "MIN",
                    },
                    "ref": null,
                    "rendered": "Minnesota Wild",
                    "type": "option",
                  },
                  Object {
                    "instance": null,
                    "key": "MTL",
                    "nodeType": "host",
                    "props": Object {
                      "children": "Montreal Canadiens",
                      "value": "MTL",
                    },
                    "ref": null,
                    "rendered": "Montreal Canadiens",
                    "type": "option",
                  },
                  Object {
                    "instance": null,
                    "key": "NSH",
                    "nodeType": "host",
                    "props": Object {
                      "children": "Nashville Predators",
                      "value": "NSH",
                    },
                    "ref": null,
                    "rendered": "Nashville Predators",
                    "type": "option",
                  },
                  Object {
                    "instance": null,
                    "key": "NJD",
                    "nodeType": "host",
                    "props": Object {
                      "children": "New Jersey Devils",
                      "value": "NJD",
                    },
                    "ref": null,
                    "rendered": "New Jersey Devils",
                    "type": "option",
                  },
                  Object {
                    "instance": null,
                    "key": "NYI",
                    "nodeType": "host",
                    "props": Object {
                      "children": "New York Islanders",
                      "value": "NYI",
                    },
                    "ref": null,
                    "rendered": "New York Islanders",
                    "type": "option",
                  },
                  Object {
                    "instance": null,
                    "key": "NYR",
                    "nodeType": "host",
                    "props": Object {
                      "children": "New York Rangers",
                      "value": "NYR",
                    },
                    "ref": null,
                    "rendered": "New York Rangers",
                    "type": "option",
                  },
                  Object {
                    "instance": null,
                    "key": "OTT",
                    "nodeType": "host",
                    "props": Object {
                      "children": "Ottawa Senators",
                      "value": "OTT",
                    },
                    "ref": null,
                    "rendered": "Ottawa Senators",
                    "type": "option",
                  },
                  Object {
                    "instance": null,
                    "key": "PHI",
                    "nodeType": "host",
                    "props": Object {
                      "children": "Philadelphia Flyers",
                      "value": "PHI",
                    },
                    "ref": null,
                    "rendered": "Philadelphia Flyers",
                    "type": "option",
                  },
                  Object {
                    "instance": null,
                    "key": "PIT",
                    "nodeType": "host",
                    "props": Object {
                      "children": "Pittsburgh Penguins",
                      "value": "PIT",
                    },
                    "ref": null,
                    "rendered": "Pittsburgh Penguins",
                    "type": "option",
                  },
                  Object {
                    "instance": null,
                    "key": "SJS",
                    "nodeType": "host",
                    "props": Object {
                      "children": "San Jose Sharks",
                      "value": "SJS",
                    },
                    "ref": null,
                    "rendered": "San Jose Sharks",
                    "type": "option",
                  },
                  Object {
                    "instance": null,
                    "key": "STL",
                    "nodeType": "host",
                    "props": Object {
                      "children": "St Louis Blues",
                      "value": "STL",
                    },
                    "ref": null,
                    "rendered": "St Louis Blues",
                    "type": "option",
                  },
                  Object {
                    "instance": null,
                    "key": "TBL",
                    "nodeType": "host",
                    "props": Object {
                      "children": "Tampa Bay Lightning",
                      "value": "TBL",
                    },
                    "ref": null,
                    "rendered": "Tampa Bay Lightning",
                    "type": "option",
                  },
                  Object {
                    "instance": null,
                    "key": "TOR",
                    "nodeType": "host",
                    "props": Object {
                      "children": "Toronto Maple Leafs",
                      "value": "TOR",
                    },
                    "ref": null,
                    "rendered": "Toronto Maple Leafs",
                    "type": "option",
                  },
                  Object {
                    "instance": null,
                    "key": "VAN",
                    "nodeType": "host",
                    "props": Object {
                      "children": "Vancouver Canucks",
                      "value": "VAN",
                    },
                    "ref": null,
                    "rendered": "Vancouver Canucks",
                    "type": "option",
                  },
                  Object {
                    "instance": null,
                    "key": "VGK",
                    "nodeType": "host",
                    "props": Object {
                      "children": "Vegas Golden Knights",
                      "value": "VGK",
                    },
                    "ref": null,
                    "rendered": "Vegas Golden Knights",
                    "type": "option",
                  },
                  Object {
                    "instance": null,
                    "key": "WSH",
                    "nodeType": "host",
                    "props": Object {
                      "children": "Washington Capitals",
                      "value": "WSH",
                    },
                    "ref": null,
                    "rendered": "Washington Capitals",
                    "type": "option",
                  },
                  Object {
                    "instance": null,
                    "key": "WPG",
                    "nodeType": "host",
                    "props": Object {
                      "children": "Winnipeg Jets",
                      "value": "WPG",
                    },
                    "ref": null,
                    "rendered": "Winnipeg Jets",
                    "type": "option",
                  },
                ],
                "type": "select",
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <label>
                  Location
                </label>,
                <select
                  className="select"
                  onChange={[Function]}
                  value="either"
                >
                  <option
                    value="home"
                  >
                    Home
                  </option>
                  <option
                    value="away"
                  >
                    Away
                  </option>
                  <option
                    value="either"
                  >
                    Either
                  </option>
                </select>,
              ],
              "className": "form__input",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Location",
                },
                "ref": null,
                "rendered": "Location",
                "type": "label",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <option
                      value="home"
                    >
                      Home
                    </option>,
                    <option
                      value="away"
                    >
                      Away
                    </option>,
                    <option
                      value="either"
                    >
                      Either
                    </option>,
                  ],
                  "className": "select",
                  "onChange": [Function],
                  "value": "either",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": "home",
                    "nodeType": "host",
                    "props": Object {
                      "children": "Home",
                      "value": "home",
                    },
                    "ref": null,
                    "rendered": "Home",
                    "type": "option",
                  },
                  Object {
                    "instance": null,
                    "key": "away",
                    "nodeType": "host",
                    "props": Object {
                      "children": "Away",
                      "value": "away",
                    },
                    "ref": null,
                    "rendered": "Away",
                    "type": "option",
                  },
                  Object {
                    "instance": null,
                    "key": "either",
                    "nodeType": "host",
                    "props": Object {
                      "children": "Either",
                      "value": "either",
                    },
                    "ref": null,
                    "rendered": "Either",
                    "type": "option",
                  },
                ],
                "type": "select",
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <label>
                  Start Date
                </label>,
                <withStyles(SingleDatePicker)
                  anchorDirection="left"
                  appendToBody={false}
                  block={true}
                  calendarInfoPosition="bottom"
                  customCloseIcon={null}
                  customInputIcon={null}
                  date={null}
                  daySize={39}
                  disableScroll={false}
                  disabled={false}
                  displayFormat={[Function]}
                  enableOutsideDays={false}
                  firstDayOfWeek={null}
                  focused={false}
                  hideKeyboardShortcutsPanel={false}
                  horizontalMargin={0}
                  horizontalMonthPadding={13}
                  id="date"
                  initialVisibleMonth={null}
                  inputIconPosition="before"
                  isDayBlocked={[Function]}
                  isDayHighlighted={[Function]}
                  isOutsideRange={[Function]}
                  isRTL={false}
                  keepFocusOnInput={false}
                  keepOpenOnDateSelect={false}
                  monthFormat="MMMM YYYY"
                  navNext={null}
                  navPrev={null}
                  noBorder={false}
                  numberOfMonths={1}
                  onClose={[Function]}
                  onDateChange={[Function]}
                  onFocusChange={[Function]}
                  onNextMonthClick={[Function]}
                  onPrevMonthClick={[Function]}
                  openDirection="down"
                  orientation="horizontal"
                  phrases={
                    Object {
                      "calendarLabel": "Calendar",
                      "chooseAvailableDate": [Function],
                      "clearDate": "Clear Date",
                      "closeDatePicker": "Close",
                      "dateIsSelected": [Function],
                      "dateIsUnavailable": [Function],
                      "enterKey": "Enter key",
                      "escape": "Escape key",
                      "hideKeyboardShortcutsPanel": "Close the shortcuts panel.",
                      "homeEnd": "Home and end keys",
                      "jumpToNextMonth": "Move forward to switch to the next month.",
                      "jumpToPrevMonth": "Move backward to switch to the previous month.",
                      "keyboardNavigationInstructions": "Press the down arrow key to interact with the calendar and
  select a date. Press the question mark key to get the keyboard shortcuts for changing dates.",
                      "keyboardShortcuts": "Keyboard Shortcuts",
                      "leftArrowRightArrow": "Right and left arrow keys",
                      "moveFocusByOneDay": "Move backward (left) and forward (right) by one day.",
                      "moveFocusByOneMonth": "Switch months.",
                      "moveFocusByOneWeek": "Move backward (up) and forward (down) by one week.",
                      "moveFocustoStartAndEndOfWeek": "Go to the first or last day of a week.",
                      "openThisPanel": "Open this panel.",
                      "pageUpPageDown": "page up and page down keys",
                      "questionMark": "Question mark",
                      "returnFocusToInput": "Return to the date input field.",
                      "selectFocusedDate": "Select the date in focus.",
                      "showKeyboardShortcutsPanel": "Open the keyboard shortcuts panel.",
                      "upArrowDownArrow": "up and down arrow keys",
                    }
                  }
                  placeholder="Date"
                  readOnly={false}
                  regular={false}
                  renderCalendarInfo={null}
                  renderDayContents={null}
                  renderMonthElement={null}
                  renderMonthText={null}
                  reopenPickerOnClearDate={false}
                  required={false}
                  screenReaderInputMessage=""
                  showClearDate={false}
                  showDefaultInputIcon={false}
                  small={false}
                  verticalHeight={null}
                  verticalSpacing={22}
                  weekDayFormat="dd"
                  withFullScreenPortal={false}
                  withPortal={false}
                />,
              ],
              "className": "form__input",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Start Date",
                },
                "ref": null,
                "rendered": "Start Date",
                "type": "label",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "anchorDirection": "left",
                  "appendToBody": false,
                  "block": true,
                  "calendarInfoPosition": "bottom",
                  "customCloseIcon": null,
                  "customInputIcon": null,
                  "date": null,
                  "dayAriaLabelFormat": undefined,
                  "daySize": 39,
                  "disableScroll": false,
                  "disabled": false,
                  "displayFormat": [Function],
                  "enableOutsideDays": false,
                  "firstDayOfWeek": null,
                  "focused": false,
                  "hideKeyboardShortcutsPanel": false,
                  "horizontalMargin": 0,
                  "horizontalMonthPadding": 13,
                  "id": "date",
                  "initialVisibleMonth": null,
                  "inputIconPosition": "before",
                  "isDayBlocked": [Function],
                  "isDayHighlighted": [Function],
                  "isOutsideRange": [Function],
                  "isRTL": false,
                  "keepFocusOnInput": false,
                  "keepOpenOnDateSelect": false,
                  "monthFormat": "MMMM YYYY",
                  "navNext": null,
                  "navPrev": null,
                  "noBorder": false,
                  "numberOfMonths": 1,
                  "onClose": [Function],
                  "onDateChange": [Function],
                  "onFocusChange": [Function],
                  "onNextMonthClick": [Function],
                  "onPrevMonthClick": [Function],
                  "openDirection": "down",
                  "orientation": "horizontal",
                  "phrases": Object {
                    "calendarLabel": "Calendar",
                    "chooseAvailableDate": [Function],
                    "clearDate": "Clear Date",
                    "closeDatePicker": "Close",
                    "dateIsSelected": [Function],
                    "dateIsUnavailable": [Function],
                    "enterKey": "Enter key",
                    "escape": "Escape key",
                    "hideKeyboardShortcutsPanel": "Close the shortcuts panel.",
                    "homeEnd": "Home and end keys",
                    "jumpToNextMonth": "Move forward to switch to the next month.",
                    "jumpToPrevMonth": "Move backward to switch to the previous month.",
                    "keyboardNavigationInstructions": "Press the down arrow key to interact with the calendar and
  select a date. Press the question mark key to get the keyboard shortcuts for changing dates.",
                    "keyboardShortcuts": "Keyboard Shortcuts",
                    "leftArrowRightArrow": "Right and left arrow keys",
                    "moveFocusByOneDay": "Move backward (left) and forward (right) by one day.",
                    "moveFocusByOneMonth": "Switch months.",
                    "moveFocusByOneWeek": "Move backward (up) and forward (down) by one week.",
                    "moveFocustoStartAndEndOfWeek": "Go to the first or last day of a week.",
                    "openThisPanel": "Open this panel.",
                    "pageUpPageDown": "page up and page down keys",
                    "questionMark": "Question mark",
                    "returnFocusToInput": "Return to the date input field.",
                    "selectFocusedDate": "Select the date in focus.",
                    "showKeyboardShortcutsPanel": "Open the keyboard shortcuts panel.",
                    "upArrowDownArrow": "up and down arrow keys",
                  },
                  "placeholder": "Date",
                  "readOnly": false,
                  "regular": false,
                  "renderCalendarDay": undefined,
                  "renderCalendarInfo": null,
                  "renderDayContents": null,
                  "renderMonthElement": null,
                  "renderMonthText": null,
                  "reopenPickerOnClearDate": false,
                  "required": false,
                  "screenReaderInputMessage": "",
                  "showClearDate": false,
                  "showDefaultInputIcon": false,
                  "small": false,
                  "transitionDuration": undefined,
                  "verticalHeight": null,
                  "verticalSpacing": 22,
                  "weekDayFormat": "dd",
                  "withFullScreenPortal": false,
                  "withPortal": false,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <label>
                  End Date
                </label>,
                <withStyles(SingleDatePicker)
                  anchorDirection="left"
                  appendToBody={false}
                  block={true}
                  calendarInfoPosition="bottom"
                  customCloseIcon={null}
                  customInputIcon={null}
                  date={null}
                  daySize={39}
                  disableScroll={false}
                  disabled={false}
                  displayFormat={[Function]}
                  enableOutsideDays={false}
                  firstDayOfWeek={null}
                  focused={false}
                  hideKeyboardShortcutsPanel={false}
                  horizontalMargin={0}
                  horizontalMonthPadding={13}
                  id="date"
                  initialVisibleMonth={null}
                  inputIconPosition="before"
                  isDayBlocked={[Function]}
                  isDayHighlighted={[Function]}
                  isOutsideRange={[Function]}
                  isRTL={false}
                  keepFocusOnInput={false}
                  keepOpenOnDateSelect={false}
                  monthFormat="MMMM YYYY"
                  navNext={null}
                  navPrev={null}
                  noBorder={false}
                  numberOfMonths={1}
                  onClose={[Function]}
                  onDateChange={[Function]}
                  onFocusChange={[Function]}
                  onNextMonthClick={[Function]}
                  onPrevMonthClick={[Function]}
                  openDirection="down"
                  orientation="horizontal"
                  phrases={
                    Object {
                      "calendarLabel": "Calendar",
                      "chooseAvailableDate": [Function],
                      "clearDate": "Clear Date",
                      "closeDatePicker": "Close",
                      "dateIsSelected": [Function],
                      "dateIsUnavailable": [Function],
                      "enterKey": "Enter key",
                      "escape": "Escape key",
                      "hideKeyboardShortcutsPanel": "Close the shortcuts panel.",
                      "homeEnd": "Home and end keys",
                      "jumpToNextMonth": "Move forward to switch to the next month.",
                      "jumpToPrevMonth": "Move backward to switch to the previous month.",
                      "keyboardNavigationInstructions": "Press the down arrow key to interact with the calendar and
  select a date. Press the question mark key to get the keyboard shortcuts for changing dates.",
                      "keyboardShortcuts": "Keyboard Shortcuts",
                      "leftArrowRightArrow": "Right and left arrow keys",
                      "moveFocusByOneDay": "Move backward (left) and forward (right) by one day.",
                      "moveFocusByOneMonth": "Switch months.",
                      "moveFocusByOneWeek": "Move backward (up) and forward (down) by one week.",
                      "moveFocustoStartAndEndOfWeek": "Go to the first or last day of a week.",
                      "openThisPanel": "Open this panel.",
                      "pageUpPageDown": "page up and page down keys",
                      "questionMark": "Question mark",
                      "returnFocusToInput": "Return to the date input field.",
                      "selectFocusedDate": "Select the date in focus.",
                      "showKeyboardShortcutsPanel": "Open the keyboard shortcuts panel.",
                      "upArrowDownArrow": "up and down arrow keys",
                    }
                  }
                  placeholder="Date"
                  readOnly={false}
                  regular={false}
                  renderCalendarInfo={null}
                  renderDayContents={null}
                  renderMonthElement={null}
                  renderMonthText={null}
                  reopenPickerOnClearDate={false}
                  required={false}
                  screenReaderInputMessage=""
                  showClearDate={false}
                  showDefaultInputIcon={false}
                  small={false}
                  verticalHeight={null}
                  verticalSpacing={22}
                  weekDayFormat="dd"
                  withFullScreenPortal={false}
                  withPortal={false}
                />,
              ],
              "className": "form__input",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "End Date",
                },
                "ref": null,
                "rendered": "End Date",
                "type": "label",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "anchorDirection": "left",
                  "appendToBody": false,
                  "block": true,
                  "calendarInfoPosition": "bottom",
                  "customCloseIcon": null,
                  "customInputIcon": null,
                  "date": null,
                  "dayAriaLabelFormat": undefined,
                  "daySize": 39,
                  "disableScroll": false,
                  "disabled": false,
                  "displayFormat": [Function],
                  "enableOutsideDays": false,
                  "firstDayOfWeek": null,
                  "focused": false,
                  "hideKeyboardShortcutsPanel": false,
                  "horizontalMargin": 0,
                  "horizontalMonthPadding": 13,
                  "id": "date",
                  "initialVisibleMonth": null,
                  "inputIconPosition": "before",
                  "isDayBlocked": [Function],
                  "isDayHighlighted": [Function],
                  "isOutsideRange": [Function],
                  "isRTL": false,
                  "keepFocusOnInput": false,
                  "keepOpenOnDateSelect": false,
                  "monthFormat": "MMMM YYYY",
                  "navNext": null,
                  "navPrev": null,
                  "noBorder": false,
                  "numberOfMonths": 1,
                  "onClose": [Function],
                  "onDateChange": [Function],
                  "onFocusChange": [Function],
                  "onNextMonthClick": [Function],
                  "onPrevMonthClick": [Function],
                  "openDirection": "down",
                  "orientation": "horizontal",
                  "phrases": Object {
                    "calendarLabel": "Calendar",
                    "chooseAvailableDate": [Function],
                    "clearDate": "Clear Date",
                    "closeDatePicker": "Close",
                    "dateIsSelected": [Function],
                    "dateIsUnavailable": [Function],
                    "enterKey": "Enter key",
                    "escape": "Escape key",
                    "hideKeyboardShortcutsPanel": "Close the shortcuts panel.",
                    "homeEnd": "Home and end keys",
                    "jumpToNextMonth": "Move forward to switch to the next month.",
                    "jumpToPrevMonth": "Move backward to switch to the previous month.",
                    "keyboardNavigationInstructions": "Press the down arrow key to interact with the calendar and
  select a date. Press the question mark key to get the keyboard shortcuts for changing dates.",
                    "keyboardShortcuts": "Keyboard Shortcuts",
                    "leftArrowRightArrow": "Right and left arrow keys",
                    "moveFocusByOneDay": "Move backward (left) and forward (right) by one day.",
                    "moveFocusByOneMonth": "Switch months.",
                    "moveFocusByOneWeek": "Move backward (up) and forward (down) by one week.",
                    "moveFocustoStartAndEndOfWeek": "Go to the first or last day of a week.",
                    "openThisPanel": "Open this panel.",
                    "pageUpPageDown": "page up and page down keys",
                    "questionMark": "Question mark",
                    "returnFocusToInput": "Return to the date input field.",
                    "selectFocusedDate": "Select the date in focus.",
                    "showKeyboardShortcutsPanel": "Open the keyboard shortcuts panel.",
                    "upArrowDownArrow": "up and down arrow keys",
                  },
                  "placeholder": "Date",
                  "readOnly": false,
                  "regular": false,
                  "renderCalendarDay": undefined,
                  "renderCalendarInfo": null,
                  "renderDayContents": null,
                  "renderMonthElement": null,
                  "renderMonthText": null,
                  "reopenPickerOnClearDate": false,
                  "required": false,
                  "screenReaderInputMessage": "",
                  "showClearDate": false,
                  "showDefaultInputIcon": false,
                  "small": false,
                  "transitionDuration": undefined,
                  "verticalHeight": null,
                  "verticalSpacing": 22,
                  "weekDayFormat": "dd",
                  "withFullScreenPortal": false,
                  "withPortal": false,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <button
                  className="button"
                  onClick={[Function]}
                >
                  Reset
                </button>,
                <button
                  className="button"
                >
                  Submit
                </button>,
              ],
              "className": "buttons",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Reset",
                  "className": "button",
                  "onClick": [Function],
                },
                "ref": null,
                "rendered": "Reset",
                "type": "button",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Submit",
                  "className": "button",
                },
                "ref": null,
                "rendered": "Submit",
                "type": "button",
              },
            ],
            "type": "div",
          },
        ],
        "type": "form",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;
